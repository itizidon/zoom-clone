{
  "{\"sourceRoot\":\"/home/don/projects/screenshare/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/projects/screenshare/server\",\"filename\":\"/home/don/projects/screenshare/server/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/projects/screenshare/server\",\"plugins\":[],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/projects/screenshare/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/projects/screenshare/server",
      "filename": "/home/don/projects/screenshare/server/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/projects/screenshare/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/projects/screenshare/server/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/don/projects/screenshare/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/projects/screenshare/server/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport http from 'http';\nconst app = express();\nconst server = http.createServer(app);\nimport socket from 'socket.io';\nconst io = socket(server);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJodHRwIiwiYXBwIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwic29ja2V0IiwiaW8iXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLE1BQWpCO0FBQ0EsTUFBTUMsR0FBRyxHQUFHRixPQUFPLEVBQW5CO0FBQ0EsTUFBTUcsTUFBTSxHQUFHRixJQUFJLENBQUNHLFlBQUwsQ0FBa0JGLEdBQWxCLENBQWY7QUFDQSxPQUFPRyxNQUFQLE1BQW1CLFdBQW5CO0FBQ0EsTUFBTUMsRUFBRSxHQUFHRCxNQUFNLENBQUNGLE1BQUQsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvZG9uL3Byb2plY3RzL3NjcmVlbnNoYXJlL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCdcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKVxuaW1wb3J0IHNvY2tldCBmcm9tICdzb2NrZXQuaW8nXG5jb25zdCBpbyA9IHNvY2tldChzZXJ2ZXIpXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "http",
        "app",
        "server",
        "createServer",
        "socket",
        "io"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AACA,MAAMG,MAAM,GAAGF,IAAI,CAACG,YAAL,CAAkBF,GAAlB,CAAf;AACA,OAAOG,MAAP,MAAmB,WAAnB;AACA,MAAMC,EAAE,GAAGD,MAAM,CAACF,MAAD,CAAjB",
      "sourceRoot": "/home/don/projects/screenshare/server/",
      "sourcesContent": [
        "import express from 'express'\nimport http from 'http'\nconst app = express()\nconst server = http.createServer(app)\nimport socket from 'socket.io'\nconst io = socket(server)\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1597870408791
  },
  "{\"sourceRoot\":\"/home/don/projects/screenshare/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/projects/screenshare/server\",\"filename\":\"/home/don/projects/screenshare/server/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/projects/screenshare/server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/projects/screenshare/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/projects/screenshare/server",
      "filename": "/home/don/projects/screenshare/server/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/projects/screenshare/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/projects/screenshare/server/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/projects/screenshare/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/projects/screenshare/server/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\n\nvar server = _http[\"default\"].createServer(app);\n\nvar io = (0, _socket[\"default\"])(server);\nvar room = {\n  empty: true\n};\nio.on('connection', function (socket) {\n  socket.on('join room', function () {\n    if (room.empty) {\n      io.to(socket.id).emit('first guy');\n      room.empty = false;\n    } else {\n      socket.broadcast.emit('createConnection');\n    }\n  });\n  socket.on('video-offer', function (createdOffer) {\n    socket.broadcast.emit('handle-video-offer', createdOffer);\n  });\n  socket.on('video-answer', function (createdAnswer) {\n    socket.broadcast.emit('handle-video-answer', createdAnswer);\n  });\n  socket.on('new-ice-candidate', function (candidate) {\n    socket.broadcast.emit('handle-new-ice-candidate', candidate);\n  });\n});\nserver.listen(8000, function () {\n  return console.log('running on 800');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInNlcnZlciIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJpbyIsInJvb20iLCJlbXB0eSIsIm9uIiwic29ja2V0IiwidG8iLCJpZCIsImVtaXQiLCJicm9hZGNhc3QiLCJjcmVhdGVkT2ZmZXIiLCJjcmVhdGVkQW5zd2VyIiwiY2FuZGlkYXRlIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFJQTs7QUFFQTs7OztBQUxBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx1QkFBUjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdDLGlCQUFLQyxZQUFMLENBQWtCSixHQUFsQixDQUFmOztBQUVBLElBQU1LLEVBQUUsR0FBRyx3QkFBT0gsTUFBUCxDQUFYO0FBR0EsSUFBSUksSUFBSSxHQUFHO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQVg7QUFFQUYsRUFBRSxDQUFDRyxFQUFILENBQU0sWUFBTixFQUFvQixVQUFBQyxNQUFNLEVBQUk7QUFDNUJBLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLFdBQVYsRUFBdUIsWUFBSTtBQUN6QixRQUFHRixJQUFJLENBQUNDLEtBQVIsRUFBYztBQUNaRixNQUFBQSxFQUFFLENBQUNLLEVBQUgsQ0FBTUQsTUFBTSxDQUFDRSxFQUFiLEVBQWlCQyxJQUFqQixDQUFzQixXQUF0QjtBQUNBTixNQUFBQSxJQUFJLENBQUNDLEtBQUwsR0FBYSxLQUFiO0FBQ0QsS0FIRCxNQUlJO0FBQ0ZFLE1BQUFBLE1BQU0sQ0FBQ0ksU0FBUCxDQUFpQkQsSUFBakIsQ0FBc0Isa0JBQXRCO0FBQ0Q7QUFDRixHQVJEO0FBVUFILEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGFBQVYsRUFBeUIsVUFBQU0sWUFBWSxFQUFFO0FBQ3JDTCxJQUFBQSxNQUFNLENBQUNJLFNBQVAsQ0FBaUJELElBQWpCLENBQXNCLG9CQUF0QixFQUE0Q0UsWUFBNUM7QUFDRCxHQUZEO0FBSUFMLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGNBQVYsRUFBMEIsVUFBQU8sYUFBYSxFQUFFO0FBQ3ZDTixJQUFBQSxNQUFNLENBQUNJLFNBQVAsQ0FBaUJELElBQWpCLENBQXNCLHFCQUF0QixFQUE2Q0csYUFBN0M7QUFDRCxHQUZEO0FBR0FOLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLG1CQUFWLEVBQStCLFVBQUFRLFNBQVMsRUFBRTtBQUN4Q1AsSUFBQUEsTUFBTSxDQUFDSSxTQUFQLENBQWlCRCxJQUFqQixDQUFzQiwwQkFBdEIsRUFBa0RJLFNBQWxEO0FBQ0QsR0FGRDtBQUdELENBckJEO0FBdUJBZCxNQUFNLENBQUNlLE1BQVAsQ0FBYyxJQUFkLEVBQW9CO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosQ0FBTjtBQUFBLENBQXBCIiwic291cmNlUm9vdCI6Ii9ob21lL2Rvbi9wcm9qZWN0cy9zY3JlZW5zaGFyZS9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBodHRwIGZyb20gJ2h0dHAnXG5jb25zdCBhcHAgPSBleHByZXNzKClcbmFwcC51c2UoY29ycygpKVxuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKVxuaW1wb3J0IHNvY2tldCBmcm9tICdzb2NrZXQuaW8nXG5jb25zdCBpbyA9IHNvY2tldChzZXJ2ZXIpXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuXG5sZXQgcm9vbSA9IHsgZW1wdHk6IHRydWUgfVxuXG5pby5vbignY29ubmVjdGlvbicsIHNvY2tldCA9PiB7XG4gIHNvY2tldC5vbignam9pbiByb29tJywgKCk9PntcbiAgICBpZihyb29tLmVtcHR5KXtcbiAgICAgIGlvLnRvKHNvY2tldC5pZCkuZW1pdCgnZmlyc3QgZ3V5JylcbiAgICAgIHJvb20uZW1wdHkgPSBmYWxzZVxuICAgIH1cbiAgICBlbHNle1xuICAgICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCdjcmVhdGVDb25uZWN0aW9uJylcbiAgICB9XG4gIH0pXG5cbiAgc29ja2V0Lm9uKCd2aWRlby1vZmZlcicsIGNyZWF0ZWRPZmZlcj0+e1xuICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdCgnaGFuZGxlLXZpZGVvLW9mZmVyJywgY3JlYXRlZE9mZmVyKVxuICB9KVxuXG4gIHNvY2tldC5vbigndmlkZW8tYW5zd2VyJywgY3JlYXRlZEFuc3dlcj0+e1xuICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdCgnaGFuZGxlLXZpZGVvLWFuc3dlcicsIGNyZWF0ZWRBbnN3ZXIpXG4gIH0pXG4gIHNvY2tldC5vbignbmV3LWljZS1jYW5kaWRhdGUnLCBjYW5kaWRhdGU9PntcbiAgICBzb2NrZXQuYnJvYWRjYXN0LmVtaXQoJ2hhbmRsZS1uZXctaWNlLWNhbmRpZGF0ZScsIGNhbmRpZGF0ZSlcbiAgfSlcbn0pXG5cbnNlcnZlci5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coJ3J1bm5pbmcgb24gODAwJykpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "server",
        "http",
        "createServer",
        "io",
        "room",
        "empty",
        "on",
        "socket",
        "to",
        "id",
        "emit",
        "broadcast",
        "createdOffer",
        "createdAnswer",
        "candidate",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AAIA;;AAEA;;;;AALA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;;AACA,IAAMC,MAAM,GAAGC,iBAAKC,YAAL,CAAkBJ,GAAlB,CAAf;;AAEA,IAAMK,EAAE,GAAG,wBAAOH,MAAP,CAAX;AAGA,IAAII,IAAI,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAX;AAEAF,EAAE,CAACG,EAAH,CAAM,YAAN,EAAoB,UAAAC,MAAM,EAAI;AAC5BA,EAAAA,MAAM,CAACD,EAAP,CAAU,WAAV,EAAuB,YAAI;AACzB,QAAGF,IAAI,CAACC,KAAR,EAAc;AACZF,MAAAA,EAAE,CAACK,EAAH,CAAMD,MAAM,CAACE,EAAb,EAAiBC,IAAjB,CAAsB,WAAtB;AACAN,MAAAA,IAAI,CAACC,KAAL,GAAa,KAAb;AACD,KAHD,MAII;AACFE,MAAAA,MAAM,CAACI,SAAP,CAAiBD,IAAjB,CAAsB,kBAAtB;AACD;AACF,GARD;AAUAH,EAAAA,MAAM,CAACD,EAAP,CAAU,aAAV,EAAyB,UAAAM,YAAY,EAAE;AACrCL,IAAAA,MAAM,CAACI,SAAP,CAAiBD,IAAjB,CAAsB,oBAAtB,EAA4CE,YAA5C;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACD,EAAP,CAAU,cAAV,EAA0B,UAAAO,aAAa,EAAE;AACvCN,IAAAA,MAAM,CAACI,SAAP,CAAiBD,IAAjB,CAAsB,qBAAtB,EAA6CG,aAA7C;AACD,GAFD;AAGAN,EAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAAAQ,SAAS,EAAE;AACxCP,IAAAA,MAAM,CAACI,SAAP,CAAiBD,IAAjB,CAAsB,0BAAtB,EAAkDI,SAAlD;AACD,GAFD;AAGD,CArBD;AAuBAd,MAAM,CAACe,MAAP,CAAc,IAAd,EAAoB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,CAApB",
      "sourceRoot": "/home/don/projects/screenshare/server/",
      "sourcesContent": [
        "import express from 'express'\nimport http from 'http'\nconst app = express()\napp.use(cors())\nconst server = http.createServer(app)\nimport socket from 'socket.io'\nconst io = socket(server)\nimport cors from 'cors'\n\nlet room = { empty: true }\n\nio.on('connection', socket => {\n  socket.on('join room', ()=>{\n    if(room.empty){\n      io.to(socket.id).emit('first guy')\n      room.empty = false\n    }\n    else{\n      socket.broadcast.emit('createConnection')\n    }\n  })\n\n  socket.on('video-offer', createdOffer=>{\n    socket.broadcast.emit('handle-video-offer', createdOffer)\n  })\n\n  socket.on('video-answer', createdAnswer=>{\n    socket.broadcast.emit('handle-video-answer', createdAnswer)\n  })\n  socket.on('new-ice-candidate', candidate=>{\n    socket.broadcast.emit('handle-new-ice-candidate', candidate)\n  })\n})\n\nserver.listen(8000, () => console.log('running on 800'))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599516404742
  },
  "{\"sourceRoot\":\"/home/don/projects/zoom-clone/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/projects/zoom-clone/server\",\"filename\":\"/home/don/projects/zoom-clone/server/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/projects/zoom-clone/server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/projects/zoom-clone/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/projects/zoom-clone/server",
      "filename": "/home/don/projects/zoom-clone/server/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/projects/zoom-clone/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/projects/zoom-clone/server/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/projects/zoom-clone/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/projects/zoom-clone/server/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _util = _interopRequireDefault(require(\"./util/util\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\n\nvar server = _http[\"default\"].createServer(app);\n\nvar io = (0, _socket[\"default\"])(server);\nvar room = {};\nio.on('connection', function (socket) {\n  socket.on('connectToRooms', function (roomNum) {\n    socket.join(roomNum, function () {\n      if (Object.keys(io.sockets.adapter.rooms[roomNum].sockets).length === 1) {\n        room[roomNum] = new _util[\"default\"]();\n        room[roomNum].add(socket.id);\n        io.to(roomNum).emit('connectToRoom');\n      } else {\n        room[roomNum].add(socket.id);\n        console.log(room[roomNum].elementAt(0));\n        console.log(room[roomNum].elementAt(1));\n        socket.to(roomNum).emit('makeConnection');\n      }\n    });\n  });\n  socket.on('video-answer-to-room', function (_ref) {\n    var roomNum = _ref.roomNum,\n        sdp = _ref.sdp;\n    socket.to(roomNum).emit('handle-answer-to-room', sdp);\n  });\n  socket.on('video-offer-to-room', function (_ref2) {\n    var sdp = _ref2.sdp,\n        roomNum = _ref2.roomNum;\n    socket.to(roomNum).emit('handle-offer-to-room', sdp);\n  });\n  socket.on('new-ice-candidate-to-room', function (_ref3) {\n    var roomNum = _ref3.roomNum,\n        candidate = _ref3.candidate;\n    socket.to(roomNum).emit('handle-new-ice-candidate-to-room', candidate);\n  });\n  socket.on('join room', function (roomNum) {\n    if (room.empty) {\n      io.to(socket.id).emit('first guy');\n      room.empty = false;\n    } else {\n      socket.broadcast.emit('createConnection');\n    }\n  });\n  socket.on('video-offer', function (createdOffer) {\n    socket.broadcast.emit('handle-video-offer', createdOffer);\n  });\n  socket.on('video-answer', function (createdAnswer) {\n    socket.broadcast.emit('handle-video-answer', createdAnswer);\n  });\n  socket.on('new-ice-candidate', function (candidate) {\n    socket.broadcast.emit('handle-new-ice-candidate', candidate);\n  });\n});\nserver.listen(8000, function () {\n  return console.log('running on 800');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInNlcnZlciIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJpbyIsInJvb20iLCJvbiIsInNvY2tldCIsInJvb21OdW0iLCJqb2luIiwiT2JqZWN0Iiwia2V5cyIsInNvY2tldHMiLCJhZGFwdGVyIiwicm9vbXMiLCJsZW5ndGgiLCJSb29tTGlzdCIsImFkZCIsImlkIiwidG8iLCJlbWl0IiwiY29uc29sZSIsImxvZyIsImVsZW1lbnRBdCIsInNkcCIsImNhbmRpZGF0ZSIsImVtcHR5IiwiYnJvYWRjYXN0IiwiY3JlYXRlZE9mZmVyIiwiY3JlYXRlZEFuc3dlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFJQTs7QUFFQTs7QUFDQTs7OztBQU5BLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx1QkFBUjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdDLGlCQUFLQyxZQUFMLENBQWtCSixHQUFsQixDQUFmOztBQUVBLElBQU1LLEVBQUUsR0FBRyx3QkFBT0gsTUFBUCxDQUFYO0FBSUEsSUFBSUksSUFBSSxHQUFHLEVBQVg7QUFFQUQsRUFBRSxDQUFDRSxFQUFILENBQU0sWUFBTixFQUFvQixVQUFBQyxNQUFNLEVBQUk7QUFDNUJBLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGdCQUFWLEVBQTRCLFVBQUFFLE9BQU8sRUFBSTtBQUNyQ0QsSUFBQUEsTUFBTSxDQUFDRSxJQUFQLENBQVlELE9BQVosRUFBcUIsWUFBTTtBQUN6QixVQUFJRSxNQUFNLENBQUNDLElBQVAsQ0FBWVAsRUFBRSxDQUFDUSxPQUFILENBQVdDLE9BQVgsQ0FBbUJDLEtBQW5CLENBQXlCTixPQUF6QixFQUFrQ0ksT0FBOUMsRUFBdURHLE1BQXZELEtBQWtFLENBQXRFLEVBQXlFO0FBQ3ZFVixRQUFBQSxJQUFJLENBQUNHLE9BQUQsQ0FBSixHQUFnQixJQUFJUSxnQkFBSixFQUFoQjtBQUNBWCxRQUFBQSxJQUFJLENBQUNHLE9BQUQsQ0FBSixDQUFjUyxHQUFkLENBQWtCVixNQUFNLENBQUNXLEVBQXpCO0FBQ0FkLFFBQUFBLEVBQUUsQ0FBQ2UsRUFBSCxDQUFNWCxPQUFOLEVBQWVZLElBQWYsQ0FBb0IsZUFBcEI7QUFDRCxPQUpELE1BSU87QUFDTGYsUUFBQUEsSUFBSSxDQUFDRyxPQUFELENBQUosQ0FBY1MsR0FBZCxDQUFrQlYsTUFBTSxDQUFDVyxFQUF6QjtBQUNBRyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWpCLElBQUksQ0FBQ0csT0FBRCxDQUFKLENBQWNlLFNBQWQsQ0FBd0IsQ0FBeEIsQ0FBWjtBQUNBRixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWpCLElBQUksQ0FBQ0csT0FBRCxDQUFKLENBQWNlLFNBQWQsQ0FBd0IsQ0FBeEIsQ0FBWjtBQUNBaEIsUUFBQUEsTUFBTSxDQUFDWSxFQUFQLENBQVVYLE9BQVYsRUFBbUJZLElBQW5CLENBQXdCLGdCQUF4QjtBQUNEO0FBQ0YsS0FYRDtBQVlELEdBYkQ7QUFlQWIsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsc0JBQVYsRUFBa0MsZ0JBQXNCO0FBQUEsUUFBbkJFLE9BQW1CLFFBQW5CQSxPQUFtQjtBQUFBLFFBQVZnQixHQUFVLFFBQVZBLEdBQVU7QUFDdERqQixJQUFBQSxNQUFNLENBQUNZLEVBQVAsQ0FBVVgsT0FBVixFQUFtQlksSUFBbkIsQ0FBd0IsdUJBQXhCLEVBQWlESSxHQUFqRDtBQUNELEdBRkQ7QUFJQWpCLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLHFCQUFWLEVBQWlDLGlCQUFzQjtBQUFBLFFBQW5Ca0IsR0FBbUIsU0FBbkJBLEdBQW1CO0FBQUEsUUFBZGhCLE9BQWMsU0FBZEEsT0FBYztBQUNyREQsSUFBQUEsTUFBTSxDQUFDWSxFQUFQLENBQVVYLE9BQVYsRUFBbUJZLElBQW5CLENBQXdCLHNCQUF4QixFQUFnREksR0FBaEQ7QUFDRCxHQUZEO0FBSUFqQixFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSwyQkFBVixFQUF1QyxpQkFBNEI7QUFBQSxRQUF6QkUsT0FBeUIsU0FBekJBLE9BQXlCO0FBQUEsUUFBaEJpQixTQUFnQixTQUFoQkEsU0FBZ0I7QUFDakVsQixJQUFBQSxNQUFNLENBQUNZLEVBQVAsQ0FBVVgsT0FBVixFQUFtQlksSUFBbkIsQ0FBd0Isa0NBQXhCLEVBQTRESyxTQUE1RDtBQUNELEdBRkQ7QUFJQWxCLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLFdBQVYsRUFBdUIsVUFBQUUsT0FBTyxFQUFJO0FBQ2hDLFFBQUlILElBQUksQ0FBQ3FCLEtBQVQsRUFBZ0I7QUFDZHRCLE1BQUFBLEVBQUUsQ0FBQ2UsRUFBSCxDQUFNWixNQUFNLENBQUNXLEVBQWIsRUFBaUJFLElBQWpCLENBQXNCLFdBQXRCO0FBQ0FmLE1BQUFBLElBQUksQ0FBQ3FCLEtBQUwsR0FBYSxLQUFiO0FBQ0QsS0FIRCxNQUdPO0FBQ0xuQixNQUFBQSxNQUFNLENBQUNvQixTQUFQLENBQWlCUCxJQUFqQixDQUFzQixrQkFBdEI7QUFDRDtBQUNGLEdBUEQ7QUFTQWIsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsYUFBVixFQUF5QixVQUFBc0IsWUFBWSxFQUFJO0FBQ3ZDckIsSUFBQUEsTUFBTSxDQUFDb0IsU0FBUCxDQUFpQlAsSUFBakIsQ0FBc0Isb0JBQXRCLEVBQTRDUSxZQUE1QztBQUNELEdBRkQ7QUFJQXJCLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGNBQVYsRUFBMEIsVUFBQXVCLGFBQWEsRUFBSTtBQUN6Q3RCLElBQUFBLE1BQU0sQ0FBQ29CLFNBQVAsQ0FBaUJQLElBQWpCLENBQXNCLHFCQUF0QixFQUE2Q1MsYUFBN0M7QUFDRCxHQUZEO0FBSUF0QixFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxtQkFBVixFQUErQixVQUFBbUIsU0FBUyxFQUFJO0FBQzFDbEIsSUFBQUEsTUFBTSxDQUFDb0IsU0FBUCxDQUFpQlAsSUFBakIsQ0FBc0IsMEJBQXRCLEVBQWtESyxTQUFsRDtBQUNELEdBRkQ7QUFHRCxDQWhERDtBQWtEQXhCLE1BQU0sQ0FBQzZCLE1BQVAsQ0FBYyxJQUFkLEVBQW9CO0FBQUEsU0FBTVQsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosQ0FBTjtBQUFBLENBQXBCIiwic291cmNlUm9vdCI6Ii9ob21lL2Rvbi9wcm9qZWN0cy96b29tLWNsb25lL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCdcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuYXBwLnVzZShjb3JzKCkpXG5jb25zdCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihhcHApXG5pbXBvcnQgc29ja2V0IGZyb20gJ3NvY2tldC5pbydcbmNvbnN0IGlvID0gc29ja2V0KHNlcnZlcilcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgUm9vbUxpc3QgZnJvbSAnLi91dGlsL3V0aWwnXG5cbmxldCByb29tID0geyAgfVxuXG5pby5vbignY29ubmVjdGlvbicsIHNvY2tldCA9PiB7XG4gIHNvY2tldC5vbignY29ubmVjdFRvUm9vbXMnLCByb29tTnVtID0+IHtcbiAgICBzb2NrZXQuam9pbihyb29tTnVtLCAoKSA9PiB7XG4gICAgICBpZiAoT2JqZWN0LmtleXMoaW8uc29ja2V0cy5hZGFwdGVyLnJvb21zW3Jvb21OdW1dLnNvY2tldHMpLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByb29tW3Jvb21OdW1dID0gbmV3IFJvb21MaXN0KClcbiAgICAgICAgcm9vbVtyb29tTnVtXS5hZGQoc29ja2V0LmlkKVxuICAgICAgICBpby50byhyb29tTnVtKS5lbWl0KCdjb25uZWN0VG9Sb29tJylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJvb21bcm9vbU51bV0uYWRkKHNvY2tldC5pZClcbiAgICAgICAgY29uc29sZS5sb2cocm9vbVtyb29tTnVtXS5lbGVtZW50QXQoMCkpXG4gICAgICAgIGNvbnNvbGUubG9nKHJvb21bcm9vbU51bV0uZWxlbWVudEF0KDEpKVxuICAgICAgICBzb2NrZXQudG8ocm9vbU51bSkuZW1pdCgnbWFrZUNvbm5lY3Rpb24nKVxuICAgICAgfVxuICAgIH0pXG4gIH0pXG5cbiAgc29ja2V0Lm9uKCd2aWRlby1hbnN3ZXItdG8tcm9vbScsICh7IHJvb21OdW0sIHNkcCB9KSA9PiB7XG4gICAgc29ja2V0LnRvKHJvb21OdW0pLmVtaXQoJ2hhbmRsZS1hbnN3ZXItdG8tcm9vbScsIHNkcClcbiAgfSlcblxuICBzb2NrZXQub24oJ3ZpZGVvLW9mZmVyLXRvLXJvb20nLCAoeyBzZHAsIHJvb21OdW0gfSkgPT4ge1xuICAgIHNvY2tldC50byhyb29tTnVtKS5lbWl0KCdoYW5kbGUtb2ZmZXItdG8tcm9vbScsIHNkcClcbiAgfSlcblxuICBzb2NrZXQub24oJ25ldy1pY2UtY2FuZGlkYXRlLXRvLXJvb20nLCAoeyByb29tTnVtLCBjYW5kaWRhdGUgfSkgPT4ge1xuICAgIHNvY2tldC50byhyb29tTnVtKS5lbWl0KCdoYW5kbGUtbmV3LWljZS1jYW5kaWRhdGUtdG8tcm9vbScsIGNhbmRpZGF0ZSlcbiAgfSlcblxuICBzb2NrZXQub24oJ2pvaW4gcm9vbScsIHJvb21OdW0gPT4ge1xuICAgIGlmIChyb29tLmVtcHR5KSB7XG4gICAgICBpby50byhzb2NrZXQuaWQpLmVtaXQoJ2ZpcnN0IGd1eScpXG4gICAgICByb29tLmVtcHR5ID0gZmFsc2VcbiAgICB9IGVsc2Uge1xuICAgICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCdjcmVhdGVDb25uZWN0aW9uJylcbiAgICB9XG4gIH0pXG5cbiAgc29ja2V0Lm9uKCd2aWRlby1vZmZlcicsIGNyZWF0ZWRPZmZlciA9PiB7XG4gICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCdoYW5kbGUtdmlkZW8tb2ZmZXInLCBjcmVhdGVkT2ZmZXIpXG4gIH0pXG5cbiAgc29ja2V0Lm9uKCd2aWRlby1hbnN3ZXInLCBjcmVhdGVkQW5zd2VyID0+IHtcbiAgICBzb2NrZXQuYnJvYWRjYXN0LmVtaXQoJ2hhbmRsZS12aWRlby1hbnN3ZXInLCBjcmVhdGVkQW5zd2VyKVxuICB9KVxuXG4gIHNvY2tldC5vbignbmV3LWljZS1jYW5kaWRhdGUnLCBjYW5kaWRhdGUgPT4ge1xuICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdCgnaGFuZGxlLW5ldy1pY2UtY2FuZGlkYXRlJywgY2FuZGlkYXRlKVxuICB9KVxufSlcblxuc2VydmVyLmxpc3Rlbig4MDAwLCAoKSA9PiBjb25zb2xlLmxvZygncnVubmluZyBvbiA4MDAnKSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "server",
        "http",
        "createServer",
        "io",
        "room",
        "on",
        "socket",
        "roomNum",
        "join",
        "Object",
        "keys",
        "sockets",
        "adapter",
        "rooms",
        "length",
        "RoomList",
        "add",
        "id",
        "to",
        "emit",
        "console",
        "log",
        "elementAt",
        "sdp",
        "candidate",
        "empty",
        "broadcast",
        "createdOffer",
        "createdAnswer",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AAIA;;AAEA;;AACA;;;;AANA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;;AACA,IAAMC,MAAM,GAAGC,iBAAKC,YAAL,CAAkBJ,GAAlB,CAAf;;AAEA,IAAMK,EAAE,GAAG,wBAAOH,MAAP,CAAX;AAIA,IAAII,IAAI,GAAG,EAAX;AAEAD,EAAE,CAACE,EAAH,CAAM,YAAN,EAAoB,UAAAC,MAAM,EAAI;AAC5BA,EAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,UAAAE,OAAO,EAAI;AACrCD,IAAAA,MAAM,CAACE,IAAP,CAAYD,OAAZ,EAAqB,YAAM;AACzB,UAAIE,MAAM,CAACC,IAAP,CAAYP,EAAE,CAACQ,OAAH,CAAWC,OAAX,CAAmBC,KAAnB,CAAyBN,OAAzB,EAAkCI,OAA9C,EAAuDG,MAAvD,KAAkE,CAAtE,EAAyE;AACvEV,QAAAA,IAAI,CAACG,OAAD,CAAJ,GAAgB,IAAIQ,gBAAJ,EAAhB;AACAX,QAAAA,IAAI,CAACG,OAAD,CAAJ,CAAcS,GAAd,CAAkBV,MAAM,CAACW,EAAzB;AACAd,QAAAA,EAAE,CAACe,EAAH,CAAMX,OAAN,EAAeY,IAAf,CAAoB,eAApB;AACD,OAJD,MAIO;AACLf,QAAAA,IAAI,CAACG,OAAD,CAAJ,CAAcS,GAAd,CAAkBV,MAAM,CAACW,EAAzB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,CAACG,OAAD,CAAJ,CAAce,SAAd,CAAwB,CAAxB,CAAZ;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,CAACG,OAAD,CAAJ,CAAce,SAAd,CAAwB,CAAxB,CAAZ;AACAhB,QAAAA,MAAM,CAACY,EAAP,CAAUX,OAAV,EAAmBY,IAAnB,CAAwB,gBAAxB;AACD;AACF,KAXD;AAYD,GAbD;AAeAb,EAAAA,MAAM,CAACD,EAAP,CAAU,sBAAV,EAAkC,gBAAsB;AAAA,QAAnBE,OAAmB,QAAnBA,OAAmB;AAAA,QAAVgB,GAAU,QAAVA,GAAU;AACtDjB,IAAAA,MAAM,CAACY,EAAP,CAAUX,OAAV,EAAmBY,IAAnB,CAAwB,uBAAxB,EAAiDI,GAAjD;AACD,GAFD;AAIAjB,EAAAA,MAAM,CAACD,EAAP,CAAU,qBAAV,EAAiC,iBAAsB;AAAA,QAAnBkB,GAAmB,SAAnBA,GAAmB;AAAA,QAAdhB,OAAc,SAAdA,OAAc;AACrDD,IAAAA,MAAM,CAACY,EAAP,CAAUX,OAAV,EAAmBY,IAAnB,CAAwB,sBAAxB,EAAgDI,GAAhD;AACD,GAFD;AAIAjB,EAAAA,MAAM,CAACD,EAAP,CAAU,2BAAV,EAAuC,iBAA4B;AAAA,QAAzBE,OAAyB,SAAzBA,OAAyB;AAAA,QAAhBiB,SAAgB,SAAhBA,SAAgB;AACjElB,IAAAA,MAAM,CAACY,EAAP,CAAUX,OAAV,EAAmBY,IAAnB,CAAwB,kCAAxB,EAA4DK,SAA5D;AACD,GAFD;AAIAlB,EAAAA,MAAM,CAACD,EAAP,CAAU,WAAV,EAAuB,UAAAE,OAAO,EAAI;AAChC,QAAIH,IAAI,CAACqB,KAAT,EAAgB;AACdtB,MAAAA,EAAE,CAACe,EAAH,CAAMZ,MAAM,CAACW,EAAb,EAAiBE,IAAjB,CAAsB,WAAtB;AACAf,MAAAA,IAAI,CAACqB,KAAL,GAAa,KAAb;AACD,KAHD,MAGO;AACLnB,MAAAA,MAAM,CAACoB,SAAP,CAAiBP,IAAjB,CAAsB,kBAAtB;AACD;AACF,GAPD;AASAb,EAAAA,MAAM,CAACD,EAAP,CAAU,aAAV,EAAyB,UAAAsB,YAAY,EAAI;AACvCrB,IAAAA,MAAM,CAACoB,SAAP,CAAiBP,IAAjB,CAAsB,oBAAtB,EAA4CQ,YAA5C;AACD,GAFD;AAIArB,EAAAA,MAAM,CAACD,EAAP,CAAU,cAAV,EAA0B,UAAAuB,aAAa,EAAI;AACzCtB,IAAAA,MAAM,CAACoB,SAAP,CAAiBP,IAAjB,CAAsB,qBAAtB,EAA6CS,aAA7C;AACD,GAFD;AAIAtB,EAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAAAmB,SAAS,EAAI;AAC1ClB,IAAAA,MAAM,CAACoB,SAAP,CAAiBP,IAAjB,CAAsB,0BAAtB,EAAkDK,SAAlD;AACD,GAFD;AAGD,CAhDD;AAkDAxB,MAAM,CAAC6B,MAAP,CAAc,IAAd,EAAoB;AAAA,SAAMT,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,CAApB",
      "sourceRoot": "/home/don/projects/zoom-clone/server/",
      "sourcesContent": [
        "import express from 'express'\nimport http from 'http'\nconst app = express()\napp.use(cors())\nconst server = http.createServer(app)\nimport socket from 'socket.io'\nconst io = socket(server)\nimport cors from 'cors'\nimport RoomList from './util/util'\n\nlet room = {  }\n\nio.on('connection', socket => {\n  socket.on('connectToRooms', roomNum => {\n    socket.join(roomNum, () => {\n      if (Object.keys(io.sockets.adapter.rooms[roomNum].sockets).length === 1) {\n        room[roomNum] = new RoomList()\n        room[roomNum].add(socket.id)\n        io.to(roomNum).emit('connectToRoom')\n      } else {\n        room[roomNum].add(socket.id)\n        console.log(room[roomNum].elementAt(0))\n        console.log(room[roomNum].elementAt(1))\n        socket.to(roomNum).emit('makeConnection')\n      }\n    })\n  })\n\n  socket.on('video-answer-to-room', ({ roomNum, sdp }) => {\n    socket.to(roomNum).emit('handle-answer-to-room', sdp)\n  })\n\n  socket.on('video-offer-to-room', ({ sdp, roomNum }) => {\n    socket.to(roomNum).emit('handle-offer-to-room', sdp)\n  })\n\n  socket.on('new-ice-candidate-to-room', ({ roomNum, candidate }) => {\n    socket.to(roomNum).emit('handle-new-ice-candidate-to-room', candidate)\n  })\n\n  socket.on('join room', roomNum => {\n    if (room.empty) {\n      io.to(socket.id).emit('first guy')\n      room.empty = false\n    } else {\n      socket.broadcast.emit('createConnection')\n    }\n  })\n\n  socket.on('video-offer', createdOffer => {\n    socket.broadcast.emit('handle-video-offer', createdOffer)\n  })\n\n  socket.on('video-answer', createdAnswer => {\n    socket.broadcast.emit('handle-video-answer', createdAnswer)\n  })\n\n  socket.on('new-ice-candidate', candidate => {\n    socket.broadcast.emit('handle-new-ice-candidate', candidate)\n  })\n})\n\nserver.listen(8000, () => console.log('running on 800'))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601407016409
  },
  "{\"sourceRoot\":\"/home/don/projects/zoom-clone/server/util/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/projects/zoom-clone/server\",\"filename\":\"/home/don/projects/zoom-clone/server/util/util.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/projects/zoom-clone/server\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/projects/zoom-clone/server/util/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/projects/zoom-clone/server",
      "filename": "/home/don/projects/zoom-clone/server/util/util.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/projects/zoom-clone/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/projects/zoom-clone/server/util/util.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/projects/zoom-clone/server/util/util.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/projects/zoom-clone/server/util/",
        "sourceFileName": "util.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = RoomList;\n\nfunction RoomList() {\n  var head = null;\n\n  var Node = function Node(user) {\n    this.user = {\n      userid: user,\n      userName: null\n    };\n    this.next = null;\n  };\n\n  this.size = function () {\n    var currentNode = head;\n    var count = 0;\n\n    while (currentNode) {\n      currentNode = currentNode.next;\n      count++;\n    }\n\n    return count;\n  };\n\n  this.head = function () {\n    return head;\n  };\n\n  this.add = function (userId) {\n    var user = new Node(userId);\n\n    if (head === null) {\n      head = user;\n    } else {\n      var currentNode = head;\n\n      while (currentNode.next) {\n        currentNode = currentNode.next;\n      }\n\n      currentNode.next = user;\n    }\n  };\n\n  this.elementAt = function (index) {\n    var currentNode = head;\n    var count = 0;\n\n    while (count < index) {\n      count++;\n      currentNode = currentNode.next;\n    }\n\n    return currentNode;\n  };\n\n  this.removeAtIndex = function (index) {\n    var currentNode = head;\n    var previousNode;\n\n    if (currentNode.player.order === index) {\n      head = currentNode.next;\n    } else {\n      while (currentNode.player.order !== index) {\n        previousNode = currentNode;\n        currentNode = currentNode.next;\n      }\n\n      previousNode.next = currentNode.next;\n    }\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwuanMiXSwibmFtZXMiOlsiUm9vbUxpc3QiLCJoZWFkIiwiTm9kZSIsInVzZXIiLCJ1c2VyaWQiLCJ1c2VyTmFtZSIsIm5leHQiLCJzaXplIiwiY3VycmVudE5vZGUiLCJjb3VudCIsImFkZCIsInVzZXJJZCIsImVsZW1lbnRBdCIsImluZGV4IiwicmVtb3ZlQXRJbmRleCIsInByZXZpb3VzTm9kZSIsInBsYXllciIsIm9yZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWUsU0FBU0EsUUFBVCxHQUFvQjtBQUNqQyxNQUFJQyxJQUFJLEdBQUcsSUFBWDs7QUFDQSxNQUFJQyxJQUFJLEdBQUcsU0FBUEEsSUFBTyxDQUFTQyxJQUFULEVBQWU7QUFDeEIsU0FBS0EsSUFBTCxHQUFZO0FBQUNDLE1BQUFBLE1BQU0sRUFBRUQsSUFBVDtBQUNaRSxNQUFBQSxRQUFRLEVBQUU7QUFERSxLQUFaO0FBRUEsU0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDRCxHQUpEOztBQU1BLE9BQUtDLElBQUwsR0FBWSxZQUFXO0FBQ3JCLFFBQUlDLFdBQVcsR0FBR1AsSUFBbEI7QUFDQSxRQUFJUSxLQUFLLEdBQUcsQ0FBWjs7QUFDQSxXQUFPRCxXQUFQLEVBQW9CO0FBQ2xCQSxNQUFBQSxXQUFXLEdBQUdBLFdBQVcsQ0FBQ0YsSUFBMUI7QUFDQUcsTUFBQUEsS0FBSztBQUNOOztBQUNELFdBQU9BLEtBQVA7QUFDRCxHQVJEOztBQVVBLE9BQUtSLElBQUwsR0FBWSxZQUFXO0FBQ3JCLFdBQU9BLElBQVA7QUFDRCxHQUZEOztBQUdBLE9BQUtTLEdBQUwsR0FBVyxVQUFTQyxNQUFULEVBQWlCO0FBQzFCLFFBQUlSLElBQUksR0FBRyxJQUFJRCxJQUFKLENBQVNTLE1BQVQsQ0FBWDs7QUFDQSxRQUFJVixJQUFJLEtBQUssSUFBYixFQUFtQjtBQUNqQkEsTUFBQUEsSUFBSSxHQUFHRSxJQUFQO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsVUFBSUssV0FBVyxHQUFHUCxJQUFsQjs7QUFDQSxhQUFNTyxXQUFXLENBQUNGLElBQWxCLEVBQXVCO0FBQ3JCRSxRQUFBQSxXQUFXLEdBQUdBLFdBQVcsQ0FBQ0YsSUFBMUI7QUFDRDs7QUFDREUsTUFBQUEsV0FBVyxDQUFDRixJQUFaLEdBQW1CSCxJQUFuQjtBQUNEO0FBQ0YsR0FYRDs7QUFhQSxPQUFLUyxTQUFMLEdBQWlCLFVBQVNDLEtBQVQsRUFBZ0I7QUFDL0IsUUFBSUwsV0FBVyxHQUFHUCxJQUFsQjtBQUNBLFFBQUlRLEtBQUssR0FBRyxDQUFaOztBQUNBLFdBQU9BLEtBQUssR0FBR0ksS0FBZixFQUFzQjtBQUNwQkosTUFBQUEsS0FBSztBQUNMRCxNQUFBQSxXQUFXLEdBQUdBLFdBQVcsQ0FBQ0YsSUFBMUI7QUFDRDs7QUFDRCxXQUFPRSxXQUFQO0FBQ0QsR0FSRDs7QUFVQSxPQUFLTSxhQUFMLEdBQXFCLFVBQVNELEtBQVQsRUFBZ0I7QUFDbkMsUUFBSUwsV0FBVyxHQUFHUCxJQUFsQjtBQUNBLFFBQUljLFlBQUo7O0FBQ0EsUUFBSVAsV0FBVyxDQUFDUSxNQUFaLENBQW1CQyxLQUFuQixLQUE2QkosS0FBakMsRUFBd0M7QUFDdENaLE1BQUFBLElBQUksR0FBR08sV0FBVyxDQUFDRixJQUFuQjtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU9FLFdBQVcsQ0FBQ1EsTUFBWixDQUFtQkMsS0FBbkIsS0FBNkJKLEtBQXBDLEVBQTJDO0FBQ3pDRSxRQUFBQSxZQUFZLEdBQUdQLFdBQWY7QUFDQUEsUUFBQUEsV0FBVyxHQUFHQSxXQUFXLENBQUNGLElBQTFCO0FBQ0Q7O0FBQ0RTLE1BQUFBLFlBQVksQ0FBQ1QsSUFBYixHQUFvQkUsV0FBVyxDQUFDRixJQUFoQztBQUNEO0FBQ0YsR0FaRDtBQWFEIiwic291cmNlUm9vdCI6Ii9ob21lL2Rvbi9wcm9qZWN0cy96b29tLWNsb25lL3NlcnZlci91dGlsLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb21MaXN0KCkge1xuICBsZXQgaGVhZCA9IG51bGxcbiAgbGV0IE5vZGUgPSBmdW5jdGlvbih1c2VyKSB7XG4gICAgdGhpcy51c2VyID0ge3VzZXJpZDogdXNlcixcbiAgICB1c2VyTmFtZTogbnVsbH1cbiAgICB0aGlzLm5leHQgPSBudWxsXG4gIH1cblxuICB0aGlzLnNpemUgPSBmdW5jdGlvbigpIHtcbiAgICBsZXQgY3VycmVudE5vZGUgPSBoZWFkXG4gICAgbGV0IGNvdW50ID0gMFxuICAgIHdoaWxlIChjdXJyZW50Tm9kZSkge1xuICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5uZXh0XG4gICAgICBjb3VudCsrXG4gICAgfVxuICAgIHJldHVybiBjb3VudFxuICB9XG5cbiAgdGhpcy5oZWFkID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGhlYWRcbiAgfVxuICB0aGlzLmFkZCA9IGZ1bmN0aW9uKHVzZXJJZCkge1xuICAgIGxldCB1c2VyID0gbmV3IE5vZGUodXNlcklkKVxuICAgIGlmIChoZWFkID09PSBudWxsKSB7XG4gICAgICBoZWFkID0gdXNlclxuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgY3VycmVudE5vZGUgPSBoZWFkXG4gICAgICB3aGlsZShjdXJyZW50Tm9kZS5uZXh0KXtcbiAgICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5uZXh0XG4gICAgICB9XG4gICAgICBjdXJyZW50Tm9kZS5uZXh0ID0gdXNlclxuICAgIH1cbiAgfVxuXG4gIHRoaXMuZWxlbWVudEF0ID0gZnVuY3Rpb24oaW5kZXgpIHtcbiAgICBsZXQgY3VycmVudE5vZGUgPSBoZWFkXG4gICAgbGV0IGNvdW50ID0gMFxuICAgIHdoaWxlIChjb3VudCA8IGluZGV4KSB7XG4gICAgICBjb3VudCsrXG4gICAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLm5leHRcbiAgICB9XG4gICAgcmV0dXJuIGN1cnJlbnROb2RlXG4gIH1cblxuICB0aGlzLnJlbW92ZUF0SW5kZXggPSBmdW5jdGlvbihpbmRleCkge1xuICAgIGxldCBjdXJyZW50Tm9kZSA9IGhlYWRcbiAgICBsZXQgcHJldmlvdXNOb2RlXG4gICAgaWYgKGN1cnJlbnROb2RlLnBsYXllci5vcmRlciA9PT0gaW5kZXgpIHtcbiAgICAgIGhlYWQgPSBjdXJyZW50Tm9kZS5uZXh0XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlIChjdXJyZW50Tm9kZS5wbGF5ZXIub3JkZXIgIT09IGluZGV4KSB7XG4gICAgICAgIHByZXZpb3VzTm9kZSA9IGN1cnJlbnROb2RlXG4gICAgICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUubmV4dFxuICAgICAgfVxuICAgICAgcHJldmlvdXNOb2RlLm5leHQgPSBjdXJyZW50Tm9kZS5uZXh0XG4gICAgfVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "util.js"
      ],
      "names": [
        "RoomList",
        "head",
        "Node",
        "user",
        "userid",
        "userName",
        "next",
        "size",
        "currentNode",
        "count",
        "add",
        "userId",
        "elementAt",
        "index",
        "removeAtIndex",
        "previousNode",
        "player",
        "order"
      ],
      "mappings": ";;;;;;;AAAe,SAASA,QAAT,GAAoB;AACjC,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAIC,IAAI,GAAG,SAAPA,IAAO,CAASC,IAAT,EAAe;AACxB,SAAKA,IAAL,GAAY;AAACC,MAAAA,MAAM,EAAED,IAAT;AACZE,MAAAA,QAAQ,EAAE;AADE,KAAZ;AAEA,SAAKC,IAAL,GAAY,IAAZ;AACD,GAJD;;AAMA,OAAKC,IAAL,GAAY,YAAW;AACrB,QAAIC,WAAW,GAAGP,IAAlB;AACA,QAAIQ,KAAK,GAAG,CAAZ;;AACA,WAAOD,WAAP,EAAoB;AAClBA,MAAAA,WAAW,GAAGA,WAAW,CAACF,IAA1B;AACAG,MAAAA,KAAK;AACN;;AACD,WAAOA,KAAP;AACD,GARD;;AAUA,OAAKR,IAAL,GAAY,YAAW;AACrB,WAAOA,IAAP;AACD,GAFD;;AAGA,OAAKS,GAAL,GAAW,UAASC,MAAT,EAAiB;AAC1B,QAAIR,IAAI,GAAG,IAAID,IAAJ,CAASS,MAAT,CAAX;;AACA,QAAIV,IAAI,KAAK,IAAb,EAAmB;AACjBA,MAAAA,IAAI,GAAGE,IAAP;AACD,KAFD,MAEO;AACL,UAAIK,WAAW,GAAGP,IAAlB;;AACA,aAAMO,WAAW,CAACF,IAAlB,EAAuB;AACrBE,QAAAA,WAAW,GAAGA,WAAW,CAACF,IAA1B;AACD;;AACDE,MAAAA,WAAW,CAACF,IAAZ,GAAmBH,IAAnB;AACD;AACF,GAXD;;AAaA,OAAKS,SAAL,GAAiB,UAASC,KAAT,EAAgB;AAC/B,QAAIL,WAAW,GAAGP,IAAlB;AACA,QAAIQ,KAAK,GAAG,CAAZ;;AACA,WAAOA,KAAK,GAAGI,KAAf,EAAsB;AACpBJ,MAAAA,KAAK;AACLD,MAAAA,WAAW,GAAGA,WAAW,CAACF,IAA1B;AACD;;AACD,WAAOE,WAAP;AACD,GARD;;AAUA,OAAKM,aAAL,GAAqB,UAASD,KAAT,EAAgB;AACnC,QAAIL,WAAW,GAAGP,IAAlB;AACA,QAAIc,YAAJ;;AACA,QAAIP,WAAW,CAACQ,MAAZ,CAAmBC,KAAnB,KAA6BJ,KAAjC,EAAwC;AACtCZ,MAAAA,IAAI,GAAGO,WAAW,CAACF,IAAnB;AACD,KAFD,MAEO;AACL,aAAOE,WAAW,CAACQ,MAAZ,CAAmBC,KAAnB,KAA6BJ,KAApC,EAA2C;AACzCE,QAAAA,YAAY,GAAGP,WAAf;AACAA,QAAAA,WAAW,GAAGA,WAAW,CAACF,IAA1B;AACD;;AACDS,MAAAA,YAAY,CAACT,IAAb,GAAoBE,WAAW,CAACF,IAAhC;AACD;AACF,GAZD;AAaD",
      "sourceRoot": "/home/don/projects/zoom-clone/server/util/",
      "sourcesContent": [
        "export default function RoomList() {\n  let head = null\n  let Node = function(user) {\n    this.user = {userid: user,\n    userName: null}\n    this.next = null\n  }\n\n  this.size = function() {\n    let currentNode = head\n    let count = 0\n    while (currentNode) {\n      currentNode = currentNode.next\n      count++\n    }\n    return count\n  }\n\n  this.head = function() {\n    return head\n  }\n  this.add = function(userId) {\n    let user = new Node(userId)\n    if (head === null) {\n      head = user\n    } else {\n      let currentNode = head\n      while(currentNode.next){\n        currentNode = currentNode.next\n      }\n      currentNode.next = user\n    }\n  }\n\n  this.elementAt = function(index) {\n    let currentNode = head\n    let count = 0\n    while (count < index) {\n      count++\n      currentNode = currentNode.next\n    }\n    return currentNode\n  }\n\n  this.removeAtIndex = function(index) {\n    let currentNode = head\n    let previousNode\n    if (currentNode.player.order === index) {\n      head = currentNode.next\n    } else {\n      while (currentNode.player.order !== index) {\n        previousNode = currentNode\n        currentNode = currentNode.next\n      }\n      previousNode.next = currentNode.next\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601406784673
  }
}