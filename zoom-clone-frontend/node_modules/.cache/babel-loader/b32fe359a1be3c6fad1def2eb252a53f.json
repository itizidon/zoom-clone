{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { withRouter } from 'react-router';\nconst socket = io('http://localhost:8000');\nlet counter = 0;\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nlet allVideos = [];\nlet myPeerConnection;\nlet userStream;\n\nfunction Rooms(props) {\n  const userVideo = useRef();\n  const otherStreams = useRef([]);\n  const partnerVideo = useRef();\n  useEffect(() => {\n    socket.on('connectToRoom', () => {\n      joinroom();\n    });\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        const newCandidate = new RTCIceCandidate(candidate);\n        myPeerConnection.addIceCandidate(newCandidate);\n      }\n    });\n    socket.on('handle-answer-to-room', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer);\n      myPeerConnection.setRemoteDescription(desc);\n    });\n    socket.on('handle-offer-to-room', createdOffer => {\n      console.log('handle-offer-room is hit'); // createPeerConnection()\n      // var localStream\n\n      var desc = new RTCSessionDescription(createdOffer);\n      myPeerConnection.setRemoteDescription(desc) // .then(() => {\n      //   return navigator.mediaDevices.getUserMedia(mediaConstraints)\n      // })\n      // .then(stream => {\n      //   console.log(userStream,'localstream')\n      //   userVideo.current.srcObject = localStream\n      //   localStream\n      //     .getTracks()\n      //     .forEach(track => myPeerConnection.addTrack(track, localStream))\n      // })\n      .then(() => {\n        return myPeerConnection.createAnswer();\n      }).then(function (answer) {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer-to-room', {\n          roomNum: props.match.params.id,\n          sdp: myPeerConnection.localDescription\n        });\n      });\n    });\n  });\n\n  function handleTrackEvent(event) {\n    console.log(event.streams);\n    partnerVideo.current.srcObject = event.streams[0];\n    const video = React.createElement(`video${counter}`);\n    counter++;\n    video.srcObject = event.streams[0];\n    allVideos.push(video);\n    console.log(allVideos);\n  }\n\n  function createPeerConnection() {\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun3.l.google.com:19302'\n      }, {\n        urls: 'turn:numb.viagenie.ca',\n        credential: 'muazkh',\n        username: 'webrtc@live.com'\n      }]\n    });\n    myPeerConnection.onicecandidate = handleICECandidateEvent;\n    myPeerConnection.ontrack = handleTrackEvent;\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent;\n  }\n\n  function handleNegotiationNeededEvent() {\n    myPeerConnection.createOffer().then(function (offer) {\n      return myPeerConnection.setLocalDescription(offer);\n    }).then(() => {\n      socket.emit('video-offer-to-room', {\n        sdp: myPeerConnection.localDescription,\n        roomNum: props.match.params.id\n      });\n    });\n  }\n\n  function joinroom() {\n    console.log('reached join roon');\n    createPeerConnection();\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz;\n      userStream = streamz;\n      streamz.getTracks().forEach(track => myPeerConnection.addTrack(track, streamz));\n    });\n  }\n\n  function handleICECandidateEvent(event) {\n    socket.emit('new-ice-candidate-to-room', {\n      roomNum: props.match.params.id,\n      candidate: event.candidate\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), allVideos.map((cur, ind) => {\n    return /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      ref: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 16\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      socket.emit('connectToRooms', props.match.params.id);\n      joinroom();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Connect\"));\n}\n\nexport default withRouter(Rooms);","map":{"version":3,"sources":["/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js"],"names":["React","useEffect","useRef","useState","io","withRouter","socket","counter","mediaConstraints","audio","video","allVideos","myPeerConnection","userStream","Rooms","props","userVideo","otherStreams","partnerVideo","on","joinroom","candidate","newCandidate","RTCIceCandidate","addIceCandidate","createdAnswer","desc","RTCSessionDescription","setRemoteDescription","createdOffer","console","log","then","createAnswer","answer","setLocalDescription","emit","roomNum","match","params","id","sdp","localDescription","handleTrackEvent","event","streams","current","srcObject","createElement","push","createPeerConnection","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","offer","navigator","mediaDevices","getUserMedia","streamz","getTracks","forEach","track","addTrack","map","cur","ind"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport io from 'socket.io-client'\nimport { withRouter } from 'react-router'\n\nconst socket = io('http://localhost:8000')\nlet counter = 0\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\n\nlet allVideos = []\n\nlet myPeerConnection\nlet userStream\n\nfunction Rooms(props) {\n  const userVideo = useRef()\n  const otherStreams = useRef([])\n\n  const partnerVideo = useRef()\n  useEffect(() => {\n    socket.on('connectToRoom', () => {\n      joinroom()\n    })\n\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        const newCandidate = new RTCIceCandidate(candidate)\n        myPeerConnection.addIceCandidate(newCandidate)\n      }\n    })\n\n    socket.on('handle-answer-to-room', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer)\n      myPeerConnection.setRemoteDescription(desc)\n    })\n\n    socket.on('handle-offer-to-room', createdOffer => {\n      console.log('handle-offer-room is hit')\n      // createPeerConnection()\n      // var localStream\n      var desc = new RTCSessionDescription(createdOffer)\n\n      myPeerConnection\n        .setRemoteDescription(desc)\n        // .then(() => {\n        //   return navigator.mediaDevices.getUserMedia(mediaConstraints)\n        // })\n        // .then(stream => {\n        //   console.log(userStream,'localstream')\n        //   userVideo.current.srcObject = localStream\n        //   localStream\n        //     .getTracks()\n        //     .forEach(track => myPeerConnection.addTrack(track, localStream))\n        // })\n        .then(() => {\n          return myPeerConnection.createAnswer()\n        })\n        .then(function(answer) {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer-to-room', {\n            roomNum: props.match.params.id,\n            sdp: myPeerConnection.localDescription\n          })\n        })\n    })\n  })\n\n  function handleTrackEvent(event) {\n    console.log(event.streams)\n    partnerVideo.current.srcObject = event.streams[0]\n    const video = React.createElement(`video${counter}`)\n    counter++\n\n    video.srcObject = event.streams[0]\n    allVideos.push(video)\n    console.log(allVideos)\n  }\n\n  function createPeerConnection() {\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun3.l.google.com:19302' },\n        {\n          urls: 'turn:numb.viagenie.ca',\n          credential: 'muazkh',\n          username: 'webrtc@live.com'\n        }\n      ]\n    })\n    myPeerConnection.onicecandidate = handleICECandidateEvent\n    myPeerConnection.ontrack = handleTrackEvent\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent\n  }\n\n  function handleNegotiationNeededEvent() {\n    myPeerConnection\n      .createOffer()\n      .then(function(offer) {\n        return myPeerConnection.setLocalDescription(offer)\n      })\n      .then(() => {\n        socket.emit('video-offer-to-room', {\n          sdp: myPeerConnection.localDescription,\n          roomNum: props.match.params.id\n        })\n      })\n  }\n\n  function joinroom() {\n    console.log('reached join roon')\n    createPeerConnection()\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz\n      userStream = streamz\n      streamz\n        .getTracks()\n        .forEach(track => myPeerConnection.addTrack(track, streamz))\n    })\n  }\n\n  function handleICECandidateEvent(event) {\n    socket.emit('new-ice-candidate-to-room', {\n      roomNum: props.match.params.id,\n      candidate: event.candidate\n    })\n  }\n\n  return (\n    <div>\n      <video autoPlay ref={userVideo}></video>\n      <video autoPlay ref={partnerVideo}></video>\n      {allVideos.map((cur,ind)=>{\n        return <video autoPlay ref={cur}></video>\n      })}\n      <button\n        onClick={() => {\n          socket.emit('connectToRooms', props.match.params.id)\n          joinroom()\n        }}\n      >\n        Connect\n      </button>\n    </div>\n  )\n}\n\nexport default withRouter(Rooms)\n"]},"metadata":{},"sourceType":"module"}