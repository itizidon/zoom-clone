{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/src/components/Room.js\";\nimport React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nconst socket = io('http://localhost:8000');\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nlet myPeerConnection;\n\nfunction Room() {\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  useEffect(() => {\n    socket.emit('join room');\n    socket.on('firstguy', () => {\n      createPeerConnection();\n      navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n        userVideo.current.srcObject = streamz;\n        streamz.getTracks().forEach(track => myPeerConnection.addTrack(track, streamz));\n      });\n    });\n    socket.on('sendicecandidate', candidate => {\n      let newcandidate = new RTCIceCandidate(candidate);\n      myPeerConnection.addIceCandidate(newcandidate);\n    });\n    socket.on('sentVideo', negotiation => {\n      var localStream = null;\n      createPeerConnection();\n      var desc = new RTCSessionDescription(negotiation);\n      myPeerConnection.setRemoteDescription(desc).then(() => {\n        return navigator.mediaDevices.getUserMedia(mediaConstraints);\n      }).then(streamz => {\n        localStream = streamz;\n        userVideo.current.srcObject = localStream;\n        localStream.getTracks().forEach(track => myPeerConnection.addTrack(track, localStream));\n      }).then(() => {\n        return myPeerConnection.createAnswer();\n      }).then(answer => {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer', myPeerConnection.localDescription);\n      });\n    });\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      });\n\n      myPeerConnection.onicecandidate = function handleICECandidateEvent(event) {\n        if (event.candidate) {\n          socket.emit('new-ice-candidate', event.candidate);\n        }\n      };\n\n      myPeerConnection.ontrack = function handleTrackEvent(event) {\n        // partnerVideo.current.srcObject = event.steams[0]\n        console.log(event, 'added tracks');\n      };\n\n      myPeerConnection.onnegotiationneeded = function handleNegotiationNeededEvent() {\n        myPeerConnection.createOffer().then(function (offer) {\n          return myPeerConnection.setLocalDescription(offer);\n        }).then(() => {\n          socket.emit('video-offer', myPeerConnection.localDescription);\n        }); //socketio stuff\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    red: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Room;","map":{"version":3,"sources":["/home/don/projects/zoom-clone/src/components/Room.js"],"names":["React","useEffect","useRef","io","mediaConstraints","audio","video","socket","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","myPeerConnection","Room","userVideo","partnerVideo","emit","on","createPeerConnection","then","streamz","current","srcObject","getTracks","forEach","track","addTrack","candidate","newcandidate","RTCIceCandidate","addIceCandidate","negotiation","localStream","desc","RTCSessionDescription","setRemoteDescription","createAnswer","answer","setLocalDescription","localDescription","RTCPeerConnection","iceServers","urls","onicecandidate","handleICECandidateEvent","event","ontrack","handleTrackEvent","console","log","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","offer"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport io from 'socket.io-client'\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\nconst socket = io('http://localhost:8000')\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints)\n}\n\nlet myPeerConnection\n\nfunction Room() {\n  const userVideo = useRef()\n  const partnerVideo = useRef()\n\n  useEffect(() => {\n    socket.emit('join room')\n\n    socket.on('firstguy', () => {\n      createPeerConnection()\n      navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n        userVideo.current.srcObject = streamz\n        streamz\n          .getTracks()\n          .forEach(track => myPeerConnection.addTrack(track, streamz))\n      })\n    })\n\n    socket.on('sendicecandidate', candidate => {\n      let newcandidate = new RTCIceCandidate(candidate)\n      myPeerConnection.addIceCandidate(newcandidate)\n    })\n\n    socket.on('sentVideo', negotiation => {\n      var localStream = null\n      createPeerConnection()\n      var desc = new RTCSessionDescription(negotiation)\n\n      myPeerConnection\n        .setRemoteDescription(desc)\n        .then(() => {\n          return navigator.mediaDevices.getUserMedia(mediaConstraints)\n        })\n        .then(streamz => {\n          localStream = streamz\n          userVideo.current.srcObject = localStream\n\n          localStream\n            .getTracks()\n            .forEach(track => myPeerConnection.addTrack(track, localStream))\n        })\n        .then(() => {\n          return myPeerConnection.createAnswer()\n        })\n        .then(answer => {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer', myPeerConnection.localDescription)\n        })\n    })\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [{ urls: 'stun:stun1.l.google.com:19302' }]\n      })\n\n      myPeerConnection.onicecandidate = function handleICECandidateEvent(\n        event\n      ) {\n        if (event.candidate) {\n          socket.emit('new-ice-candidate', event.candidate)\n        }\n      }\n      myPeerConnection.ontrack = function handleTrackEvent(event) {\n        // partnerVideo.current.srcObject = event.steams[0]\n        console.log(event,'added tracks')\n      }\n      myPeerConnection.onnegotiationneeded = function handleNegotiationNeededEvent() {\n        myPeerConnection\n          .createOffer()\n          .then(function(offer) {\n            return myPeerConnection.setLocalDescription(offer)\n          })\n          .then(() => {\n            socket.emit('video-offer', myPeerConnection.localDescription)\n          })\n        //socketio stuff\n      }\n    }\n  }, [])\n\n  return (\n    <div>\n      <video autoPlay ref={userVideo}></video>\n      <video autoPlay red={partnerVideo}></video>\n    </div>\n  )\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}