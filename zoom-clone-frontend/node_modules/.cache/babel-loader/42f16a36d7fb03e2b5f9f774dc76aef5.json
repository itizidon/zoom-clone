{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Room.js\";\nimport React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nconst socket = io('http://localhost:8000');\nlet myPeerConnection;\nlet userStream;\n\nfunction Room() {\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  useEffect(() => {\n    socket.on('first guy', () => {\n      joinroom();\n    });\n    socket.on('createConnection', () => {\n      userStream.getTracks().forEach(track => myPeerConnection.addTrack(track, userStream));\n    });\n\n    function joinroom() {\n      createPeerConnection();\n      navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n        userVideo.current.srcObject = streamz;\n        userStream = streamz;\n      });\n    }\n\n    socket.on('handle-new-ice-candidate', candidate => {\n      console.log(candidate);\n      const newCandidate = new RTCIceCandidate(candidate);\n      myPeerConnection.addIceCandidate(newCandidate);\n    });\n    socket.on('handle-video-offer', createdOffer => {\n      createPeerConnection();\n      var localStream;\n      var desc = new RTCSessionDescription(createdOffer);\n      myPeerConnection.setRemoteDescription(desc).then(() => {\n        return navigator.mediaDevices.getUserMedia(mediaConstraints);\n      }).then(stream => {\n        localStream = stream;\n        userVideo.current.srcObject = localStream;\n        localStream.getTracks().forEach(track => myPeerConnection.addTrack(track, localStream));\n      }).then(() => {\n        return myPeerConnection.createAnswer();\n      }).then(function (answer) {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer', myPeerConnection.localDescription);\n      });\n    });\n    socket.on('handle-video-answer', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer);\n      myPeerConnection.setRemoteDescription(desc);\n    });\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun3.l.google.com:19302'\n        }, {\n          urls: 'turn:numb.viagenie.ca',\n          credential: 'muazkh',\n          username: 'webrtc@live.com'\n        }]\n      });\n      myPeerConnection.onicecandidate = handleICECandidateEvent;\n      myPeerConnection.ontrack = handleTrackEvent;\n      myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent;\n    }\n\n    function handleICECandidateEvent(event) {\n      console.log(event);\n      socket.emit('new-ice-candidate', event.candidate);\n    }\n\n    function handleTrackEvent(event) {\n      console.log(event);\n      partnerVideo.current.srcObject = event.streams[0];\n    }\n\n    function handleNegotiationNeededEvent() {\n      myPeerConnection.createOffer().then(function (offer) {\n        return myPeerConnection.setLocalDescription(offer);\n      }).then(() => {\n        socket.emit('video-offer', myPeerConnection.localDescription);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => socket.emit('join room'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Connect\"), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Room;","map":{"version":3,"sources":["/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Room.js"],"names":["React","useEffect","useRef","io","mediaConstraints","audio","video","socket","myPeerConnection","userStream","Room","userVideo","partnerVideo","on","joinroom","getTracks","forEach","track","addTrack","createPeerConnection","navigator","mediaDevices","getUserMedia","then","streamz","current","srcObject","candidate","console","log","newCandidate","RTCIceCandidate","addIceCandidate","createdOffer","localStream","desc","RTCSessionDescription","setRemoteDescription","stream","createAnswer","answer","setLocalDescription","emit","localDescription","createdAnswer","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","handleTrackEvent","onnegotiationneeded","handleNegotiationNeededEvent","event","streams","createOffer","offer"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport io from 'socket.io-client'\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\nconst socket = io('http://localhost:8000')\n\nlet myPeerConnection\n\nlet userStream\n\nfunction Room() {\n  const userVideo = useRef()\n  const partnerVideo = useRef()\n\n  useEffect(() => {\n    socket.on('first guy', () => {\n      joinroom()\n    })\n\n    socket.on('createConnection', () => {\n      userStream\n        .getTracks()\n        .forEach(track => myPeerConnection.addTrack(track, userStream))\n    })\n\n    function joinroom() {\n      createPeerConnection()\n      navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n        userVideo.current.srcObject = streamz\n        userStream = streamz\n      })\n    }\n\n    socket.on('handle-new-ice-candidate', candidate => {\n      console.log(candidate)\n      const newCandidate = new RTCIceCandidate(candidate)\n      myPeerConnection.addIceCandidate(newCandidate)\n    })\n\n    socket.on('handle-video-offer', createdOffer => {\n      createPeerConnection()\n      var localStream\n      var desc = new RTCSessionDescription(createdOffer)\n\n      myPeerConnection\n        .setRemoteDescription(desc)\n        .then(() => {\n          return navigator.mediaDevices.getUserMedia(mediaConstraints)\n        })\n        .then(stream => {\n          localStream = stream\n          userVideo.current.srcObject = localStream\n\n          localStream\n            .getTracks()\n            .forEach(track => myPeerConnection.addTrack(track, localStream))\n        })\n        .then(() => {\n          return myPeerConnection.createAnswer()\n        })\n        .then(function(answer) {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer', myPeerConnection.localDescription)\n        })\n    })\n\n    socket.on('handle-video-answer', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer)\n      myPeerConnection.setRemoteDescription(desc)\n    })\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [\n          { urls: 'stun:stun3.l.google.com:19302' },\n          {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n          }\n        ]\n      })\n\n      myPeerConnection.onicecandidate = handleICECandidateEvent\n      myPeerConnection.ontrack = handleTrackEvent\n      myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent\n    }\n\n    function handleICECandidateEvent(event) {\n      console.log(event)\n      socket.emit('new-ice-candidate', event.candidate)\n    }\n\n    function handleTrackEvent(event) {\n      console.log(event)\n      partnerVideo.current.srcObject = event.streams[0]\n    }\n\n    function handleNegotiationNeededEvent() {\n      myPeerConnection\n        .createOffer()\n        .then(function(offer) {\n          return myPeerConnection.setLocalDescription(offer)\n        })\n        .then(() => {\n          socket.emit('video-offer', myPeerConnection.localDescription)\n        })\n    }\n  }, [])\n\n  return (\n    <div>\n      <button onClick={() => socket.emit('join room')}>Connect</button>\n      <video autoPlay ref={userVideo}></video>\n      <video autoPlay ref={partnerVideo}></video>\n    </div>\n  )\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}