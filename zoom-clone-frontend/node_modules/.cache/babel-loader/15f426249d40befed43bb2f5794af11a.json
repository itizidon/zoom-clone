{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/src/components/Room.js\";\nimport React, { useEffect } from 'react';\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nlet stream;\n\nfunction Room() {\n  useEffect(() => {\n    try {\n      stream = openMediaDevices({\n        video: true,\n        audio: true\n      });\n      console.log('Got MediaStream:', stream);\n    } catch (error) {\n      console.error('Error accessing media devices.', error);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"hi\", /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: stream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Room;","map":{"version":3,"sources":["/home/don/projects/zoom-clone/src/components/Room.js"],"names":["React","useEffect","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","stream","Room","video","audio","console","log","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,gBAAgB,GAAG,MAAMC,WAAN,IAAqB;AAC5C,SAAO,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCH,WAApC,CAAb;AACD,CAFD;;AAIA,IAAII,MAAJ;;AAEA,SAASC,IAAT,GAAgB;AACdP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFM,MAAAA,MAAM,GAAGL,gBAAgB,CAAC;AAAEO,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,MAAhC;AACD,KAHD,CAGE,OAAOM,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,gCAAd,EAAgDA,KAAhD;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,GAAG,EAAEN,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeC,IAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints)\n}\n\nlet stream\n\nfunction Room() {\n  useEffect(() => {\n    try {\n      stream = openMediaDevices({ video: true, audio: true })\n      console.log('Got MediaStream:', stream)\n    } catch (error) {\n      console.error('Error accessing media devices.', error)\n    }\n  }, [])\n\n  return (\n    <div>\n      hi\n      <video autoPlay ref={stream}></video>\n    </div>\n  )\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}