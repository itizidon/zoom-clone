{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:8000');\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nlet userStream;\n\nfunction Rooms() {\n  const userVideo = useRef();\n  const otherStreams = useRef([]);\n  useEffect(() => {\n    socket.on('createroom', () => {\n      joinroom();\n    });\n  });\n\n  function joinroom() {\n    // createPeerConnection()\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz;\n      userStream = streamz;\n    });\n  }\n\n  console.log(this.props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      socket.emit('connectToRooms', 'yolo');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Connect\"));\n}\n\nexport default Rooms;","map":{"version":3,"sources":["/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js"],"names":["React","useEffect","useRef","useState","io","socket","mediaConstraints","audio","video","userStream","Rooms","userVideo","otherStreams","on","joinroom","navigator","mediaDevices","getUserMedia","then","streamz","current","srcObject","console","log","props","emit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;AAEA,IAAIE,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,IADc;AACR;AACbC,EAAAA,KAAK,EAAE,IAFc,CAET;;AAFS,CAAvB;AAKA,IAAIC,UAAJ;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,SAAS,GAAGT,MAAM,EAAxB;AACA,QAAMU,YAAY,GAAGV,MAAM,CAAC,EAAD,CAA3B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACQ,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BC,MAAAA,QAAQ;AACT,KAFD;AAGD,GAJQ,CAAT;;AAMA,WAASA,QAAT,GAAoB;AAClB;AACAC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCX,gBAApC,EAAsDY,IAAtD,CAA2DC,OAAO,IAAI;AACpER,MAAAA,SAAS,CAACS,OAAV,CAAkBC,SAAlB,GAA8BF,OAA9B;AACAV,MAAAA,UAAU,GAAGU,OAAb;AACD,KAHD;AAID;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,GAAG,EAAEb,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,MAAM,CAACoB,IAAP,CAAY,gBAAZ,EAA8B,MAA9B;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAYD;;AAED,eAAef,KAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport io from 'socket.io-client'\n\nconst socket = io('http://localhost:8000')\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\n\nlet userStream\n\nfunction Rooms() {\n  const userVideo = useRef()\n  const otherStreams = useRef([])\n  useEffect(() => {\n    socket.on('createroom', () => {\n      joinroom()\n    })\n  })\n\n  function joinroom() {\n    // createPeerConnection()\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz\n      userStream = streamz\n    })\n  }\n  console.log(this.props)\n  return (\n    <div>\n      <video autoPlay ref={userVideo}></video>\n      <button\n        onClick={() => {\n          socket.emit('connectToRooms', 'yolo')\n        }}\n      >\n        Connect\n      </button>\n    </div>\n  )\n}\n\nexport default Rooms\n"]},"metadata":{},"sourceType":"module"}