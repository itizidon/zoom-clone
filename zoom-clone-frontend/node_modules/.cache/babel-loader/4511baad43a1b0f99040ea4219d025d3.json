{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/src/components/Room.js\";\nimport React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nconst socket = io('http://localhost:8000');\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nlet myPeerConnection;\nlet joinroom;\n\nfunction Room() {\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  useEffect(() => {\n    function joinroom() {}\n\n    createPeerConnection();\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz;\n      streamz.getTracks().forEach(track => myPeerConnection.addTrack(track, streamz));\n    });\n    socket.on('handle-new-ice-candidate', candidate => {\n      const newCandidate = new RTCIceCandidate(candidate);\n      myPeerConnection.addIceCandidate(newCandidate);\n    });\n    socket.on('handle-video-offer', createdOffer => {\n      var localStream = null;\n      var desc = new RTCSessionDescription(createdOffer);\n      myPeerConnection.setRemoteDescription(desc).then(() => {\n        return myPeerConnection.createAnswer();\n      }).then(function (answer) {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer', myPeerConnection.localDescription);\n      });\n    });\n    socket.on('handle-video-answer', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer);\n      myPeerConnection.setRemoteDescription(desc);\n    });\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.stunprotocol.org'\n        }, {\n          urls: 'turn:numb.viagenie.ca',\n          credential: 'muazkh',\n          username: 'webrtc@live.com'\n        }]\n      });\n      myPeerConnection.onicecandidate = handleICECandidateEvent;\n      myPeerConnection.ontrack = handleTrackEvent;\n      myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent;\n    }\n\n    function handleICECandidateEvent(event) {\n      socket.emit('new-ice-candidate', event.candidate);\n    }\n\n    function handleTrackEvent(event) {\n      console.log(event);\n    }\n\n    function handleNegotiationNeededEvent() {\n      myPeerConnection.createOffer().then(function (offer) {\n        return myPeerConnection.setLocalDescription(offer);\n      }).then(() => {\n        socket.emit('video-offer', myPeerConnection.localDescription);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => joinroom(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Connect\"), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Room;","map":{"version":3,"sources":["/home/don/projects/zoom-clone/src/components/Room.js"],"names":["React","useEffect","useRef","io","mediaConstraints","audio","video","socket","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","myPeerConnection","joinroom","Room","userVideo","partnerVideo","createPeerConnection","then","streamz","current","srcObject","getTracks","forEach","track","addTrack","on","candidate","newCandidate","RTCIceCandidate","addIceCandidate","createdOffer","localStream","desc","RTCSessionDescription","setRemoteDescription","createAnswer","answer","setLocalDescription","emit","localDescription","createdAnswer","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","handleTrackEvent","onnegotiationneeded","handleNegotiationNeededEvent","event","console","log","createOffer","offer"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport io from 'socket.io-client'\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\nconst socket = io('http://localhost:8000')\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints)\n}\n\nlet myPeerConnection\n\nlet joinroom\n\nfunction Room() {\n  const userVideo = useRef()\n  const partnerVideo = useRef()\n\n  useEffect(() => {\n\n    function joinroom(){\n\n    }\n    createPeerConnection()\n\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz\n      streamz\n        .getTracks()\n        .forEach(track => myPeerConnection.addTrack(track, streamz))\n    })\n\n    socket.on('handle-new-ice-candidate', candidate => {\n      const newCandidate = new RTCIceCandidate(candidate)\n      myPeerConnection.addIceCandidate(newCandidate)\n    })\n\n    socket.on('handle-video-offer', createdOffer => {\n      var localStream = null\n\n      var desc = new RTCSessionDescription(createdOffer)\n      myPeerConnection\n        .setRemoteDescription(desc)\n        .then(() => {\n          return myPeerConnection.createAnswer()\n        })\n        .then(function(answer) {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer', myPeerConnection.localDescription)\n        })\n    })\n\n    socket.on('handle-video-answer', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer)\n      myPeerConnection.setRemoteDescription(desc)\n    })\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [\n          { urls: 'stun:stun.stunprotocol.org' },\n          {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n          }\n        ]\n      })\n\n      myPeerConnection.onicecandidate = handleICECandidateEvent\n      myPeerConnection.ontrack = handleTrackEvent\n      myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent\n    }\n\n    function handleICECandidateEvent(event) {\n      socket.emit('new-ice-candidate', event.candidate)\n    }\n\n    function handleTrackEvent(event) {\n      console.log(event)\n    }\n\n    function handleNegotiationNeededEvent() {\n      myPeerConnection\n        .createOffer()\n        .then(function(offer) {\n          return myPeerConnection.setLocalDescription(offer)\n        })\n        .then(() => {\n          socket.emit('video-offer', myPeerConnection.localDescription)\n        })\n    }\n  }, [])\n\n  return (\n    <div>\n      <button onClick={()=>joinroom()}>Connect</button>\n      <video autoPlay ref={userVideo}></video>\n      <video autoPlay ref={partnerVideo}></video>\n    </div>\n  )\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}