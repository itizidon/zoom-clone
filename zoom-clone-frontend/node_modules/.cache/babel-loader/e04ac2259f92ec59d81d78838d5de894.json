{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js\";\nimport React, { useEffect, useRef, useState, createRef } from 'react';\nimport io from 'socket.io-client';\nimport { withRouter } from 'react-router';\nconst socket = io('http://localhost:8000');\nlet counter = 0;\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nlet myPeerConnection;\nlet userStream;\n\nfunction Rooms(props) {\n  const userVideo = useRef();\n  const otherStreams = useRef([]);\n  const allVideos = useRef([]);\n  const partnerVideo = useRef();\n  const [toggle, setToggle] = useState(false);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      console.log('captured screen');\n      userVideo.current.srcObject = streamz;\n      userStream = streamz;\n    });\n    socket.on('connectToRoom', () => {\n      joinroom();\n    });\n    socket.on('makeConnection', () => {\n      userStream.getTracks().forEach(track => myPeerConnection.addTrack(track, userStream));\n    });\n    console.log(userVideo, 'this is userVideo');\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        console.log('handle-new-ice-candidate');\n        const newCandidate = new RTCIceCandidate(candidate);\n        myPeerConnection.addIceCandidate(newCandidate);\n      }\n    });\n    socket.on('handle-answer-to-room', createdAnswer => {\n      console.log('handle answer');\n      const desc = new RTCSessionDescription(createdAnswer);\n      myPeerConnection.setRemoteDescription(desc);\n    });\n    socket.on('handle-offer-to-room', createdOffer => {\n      createPeerConnection();\n      console.log('handle-offer-room is hit'); // var localStream\n\n      var desc = new RTCSessionDescription(createdOffer);\n      myPeerConnection.setRemoteDescription(desc).then(stream => {\n        userStream.getTracks().forEach(track => {\n          myPeerConnection.addTrack(track, userStream);\n          return 'return';\n        });\n      }).then(() => {\n        console.log('this skipped user stream');\n        return myPeerConnection.createAnswer();\n      }).then(function (answer) {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer-to-room', {\n          roomNum: props.match.params.id,\n          sdp: myPeerConnection.localDescription\n        });\n      });\n    });\n  });\n\n  function handleTrackEvent(event) {\n    console.log('added events', event.streams);\n    partnerVideo.current.srcObject = event.streams[0]; // console.log(partnerVideo.current)\n\n    allVideos.current.push(React.createRef()); // allVideos.current[0].current.srcObject=event.stream[0]\n\n    console.log(allVideos, 'this is all videos current'); // allVideos.current[allVideos.current.length - 1].current = {\n    //   srcObject: event.streams[event.streams.length -1]\n    // }\n    // console.log('added track hit')\n  }\n\n  function createPeerConnection() {\n    console.log('created peer');\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun3.l.google.com:19302'\n      }, {\n        urls: 'turn:numb.viagenie.ca',\n        credential: 'muazkh',\n        username: 'webrtc@live.com'\n      }]\n    });\n    myPeerConnection.onicecandidate = handleICECandidateEvent;\n    myPeerConnection.ontrack = handleTrackEvent;\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent;\n  }\n\n  function handleNegotiationNeededEvent() {\n    console.log('negotiationneeded ');\n    myPeerConnection.createOffer().then(function (offer) {\n      return myPeerConnection.setLocalDescription(offer);\n    }).then(() => {\n      socket.emit('video-offer-to-room', {\n        sdp: myPeerConnection.localDescription,\n        roomNum: props.match.params.id\n      });\n    });\n  }\n\n  function joinroom() {\n    console.log('reached join roon');\n    createPeerConnection();\n  }\n\n  function handleICECandidateEvent(event) {\n    console.log('new-ice-candidate-toroom');\n\n    if (event.candidate) {\n      socket.emit('new-ice-candidate-to-room', {\n        roomNum: props.match.params.id,\n        candidate: event.candidate\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), toggle ? allVideos.current.current.map(cur => {\n    return /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      ref: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 20\n      }\n    });\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      socket.emit('connectToRooms', props.match.params.id);\n      setToggle(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \"Connect\"));\n}\n\nexport default withRouter(Rooms);","map":{"version":3,"sources":["/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js"],"names":["React","useEffect","useRef","useState","createRef","io","withRouter","socket","counter","mediaConstraints","audio","video","myPeerConnection","userStream","Rooms","props","userVideo","otherStreams","allVideos","partnerVideo","toggle","setToggle","navigator","mediaDevices","getUserMedia","then","streamz","console","log","current","srcObject","on","joinroom","getTracks","forEach","track","addTrack","candidate","newCandidate","RTCIceCandidate","addIceCandidate","createdAnswer","desc","RTCSessionDescription","setRemoteDescription","createdOffer","createPeerConnection","stream","createAnswer","answer","setLocalDescription","emit","roomNum","match","params","id","sdp","localDescription","handleTrackEvent","event","streams","push","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","offer","map","cur"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, createRef } from 'react'\nimport io from 'socket.io-client'\nimport { withRouter } from 'react-router'\n\nconst socket = io('http://localhost:8000')\nlet counter = 0\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\n\nlet myPeerConnection\nlet userStream\n\nfunction Rooms(props) {\n  const userVideo = useRef()\n  const otherStreams = useRef([])\n  const allVideos = useRef([])\n  const partnerVideo = useRef()\n\n  const [toggle, setToggle] = useState(false)\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      console.log('captured screen')\n      userVideo.current.srcObject = streamz\n      userStream = streamz\n    })\n\n    socket.on('connectToRoom', () => {\n      joinroom()\n    })\n\n    socket.on('makeConnection', () => {\n      userStream\n        .getTracks()\n        .forEach(track => myPeerConnection.addTrack(track, userStream))\n    })\n    console.log(userVideo, 'this is userVideo')\n\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        console.log('handle-new-ice-candidate')\n        const newCandidate = new RTCIceCandidate(candidate)\n        myPeerConnection.addIceCandidate(newCandidate)\n      }\n    })\n\n    socket.on('handle-answer-to-room', createdAnswer => {\n      console.log('handle answer')\n      const desc = new RTCSessionDescription(createdAnswer)\n      myPeerConnection.setRemoteDescription(desc)\n    })\n\n    socket.on('handle-offer-to-room', createdOffer => {\n      createPeerConnection()\n      console.log('handle-offer-room is hit')\n      // var localStream\n      var desc = new RTCSessionDescription(createdOffer)\n\n      myPeerConnection\n        .setRemoteDescription(desc)\n        .then(stream => {\n          userStream.getTracks().forEach(track => {\n            myPeerConnection.addTrack(track, userStream)\n            return 'return'\n          })\n        })\n        .then(() => {\n          console.log('this skipped user stream')\n          return myPeerConnection.createAnswer()\n        })\n        .then(function(answer) {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer-to-room', {\n            roomNum: props.match.params.id,\n            sdp: myPeerConnection.localDescription\n          })\n        })\n    })\n  })\n\n  function handleTrackEvent(event) {\n    console.log('added events', event.streams)\n    partnerVideo.current.srcObject = event.streams[0]\n    // console.log(partnerVideo.current)\n\n    allVideos.current.push(React.createRef())\n    // allVideos.current[0].current.srcObject=event.stream[0]\n    console.log(allVideos, 'this is all videos current')\n    // allVideos.current[allVideos.current.length - 1].current = {\n    //   srcObject: event.streams[event.streams.length -1]\n    // }\n    // console.log('added track hit')\n  }\n\n  function createPeerConnection() {\n    console.log('created peer')\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun3.l.google.com:19302' },\n        {\n          urls: 'turn:numb.viagenie.ca',\n          credential: 'muazkh',\n          username: 'webrtc@live.com'\n        }\n      ]\n    })\n    myPeerConnection.onicecandidate = handleICECandidateEvent\n    myPeerConnection.ontrack = handleTrackEvent\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent\n  }\n\n  function handleNegotiationNeededEvent() {\n    console.log('negotiationneeded ')\n    myPeerConnection\n      .createOffer()\n      .then(function(offer) {\n        return myPeerConnection.setLocalDescription(offer)\n      })\n      .then(() => {\n        socket.emit('video-offer-to-room', {\n          sdp: myPeerConnection.localDescription,\n          roomNum: props.match.params.id\n        })\n      })\n  }\n\n  function joinroom() {\n    console.log('reached join roon')\n    createPeerConnection()\n  }\n\n  function handleICECandidateEvent(event) {\n    console.log('new-ice-candidate-toroom')\n    if (event.candidate) {\n      socket.emit('new-ice-candidate-to-room', {\n        roomNum: props.match.params.id,\n        candidate: event.candidate\n      })\n    }\n  }\n\n  return (\n    <div>\n      <video autoPlay ref={userVideo}></video>\n      <video autoPlay ref={partnerVideo}></video>\n      {toggle\n        ? allVideos.current.current.map(cur => {\n            return <video autoPlay ref={cur}></video>\n          })\n        : null}\n\n      <button\n        onClick={() => {\n          socket.emit('connectToRooms', props.match.params.id)\n          setToggle(true)\n        }}\n      >\n        Connect\n      </button>\n    </div>\n  )\n}\n\nexport default withRouter(Rooms)\n"]},"metadata":{},"sourceType":"module"}