{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js\";\nimport React, { useEffect, useRef, useState, createRef } from 'react';\nimport io from 'socket.io-client';\nimport { withRouter } from 'react-router';\nconst socket = io('http://localhost:8000');\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nlet myPeerConnection;\nlet userStream;\n\nfunction Rooms(props) {\n  const userVideo = useRef();\n  const otherStreams = useRef([]);\n  const [allVideos, setAllVideos] = useState({\n    listOfStreams: [React.createRef()]\n  });\n  const partnerVideo = useRef();\n  const [curState, setCurState] = useState('add video');\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      console.log('captured screen');\n      userVideo.current.srcObject = streamz;\n      userStream = streamz;\n    });\n    socket.on('connectToRoom', () => {\n      joinroom();\n    });\n    socket.on('makeConnection', () => {\n      userStream.getTracks().forEach(track => myPeerConnection.addTrack(track, userStream));\n      console.log(userStream.getTracks(), 'this is userstream tracks');\n    });\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        console.log('handle-new-ice-candidate');\n        const newCandidate = new RTCIceCandidate(candidate);\n        myPeerConnection.addIceCandidate(newCandidate);\n      }\n    });\n    socket.on('handle-answer-to-room', createdAnswer => {\n      console.log('handle answer');\n      const desc = new RTCSessionDescription(createdAnswer);\n      myPeerConnection.setRemoteDescription(desc);\n    });\n    socket.on('handle-offer-to-room', createdOffer => {\n      createPeerConnection();\n      console.log('handle-offer-room is hit'); // var localStream\n\n      var desc = new RTCSessionDescription(createdOffer);\n      myPeerConnection.setRemoteDescription(desc).then(stream => {\n        userStream.getTracks().forEach(track => {\n          myPeerConnection.addTrack(track, userStream);\n          return 'return';\n        });\n        console.log(userStream.getTracks(), 'this is userstream tracks');\n      }).then(() => {\n        console.log('this skipped user stream');\n        return myPeerConnection.createAnswer();\n      }).then(function (answer) {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer-to-room', {\n          roomNum: props.match.params.id,\n          sdp: myPeerConnection.localDescription\n        });\n      });\n    });\n  });\n\n  function handleTrackEvent(event) {\n    console.log('added events', event.streams);\n    partnerVideo.current.srcObject = event.streams[0]; // console.log(partnerVideo.current)\n\n    if (curState === 'add video') {\n      let newRef = React.createRef(); // setAllVideos(oldArray => [...oldArray, newRef])\n\n      setAllVideos(oldArray => {\n        oldArray.listOfStreams[oldArray.listOfStreams.length - 1].current.srcObject = event.streams[0];\n        return [...oldArray, newRef];\n      });\n      setCurState(' add audio');\n    } // console.log(allVideos, 'this is all videos current')\n\n  }\n\n  function createPeerConnection() {\n    console.log('created peer');\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun3.l.google.com:19302'\n      }, {\n        urls: 'turn:numb.viagenie.ca',\n        credential: 'muazkh',\n        username: 'webrtc@live.com'\n      }]\n    });\n    myPeerConnection.onicecandidate = handleICECandidateEvent;\n    myPeerConnection.ontrack = handleTrackEvent;\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent;\n  }\n\n  function handleNegotiationNeededEvent() {\n    console.log('negotiationneeded ');\n    myPeerConnection.createOffer().then(function (offer) {\n      return myPeerConnection.setLocalDescription(offer);\n    }).then(() => {\n      socket.emit('video-offer-to-room', {\n        sdp: myPeerConnection.localDescription,\n        roomNum: props.match.params.id\n      });\n    });\n  }\n\n  function joinroom() {\n    console.log('reached join roon');\n    createPeerConnection();\n  }\n\n  function handleICECandidateEvent(event) {\n    console.log('new-ice-candidate-toroom');\n\n    if (event.candidate) {\n      socket.emit('new-ice-candidate-to-room', {\n        roomNum: props.match.params.id,\n        candidate: event.candidate\n      });\n    }\n  }\n\n  if (allVideos) {\n    console.log(allVideos, 'this is allVideos array');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), allVideos.listOfStreams.length >= 1 ? allVideos.listOfStreams.map(cur => {\n    console.log(cur, 'this is cur');\n    return /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      ref: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 20\n      }\n    });\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      socket.emit('connectToRooms', props.match.params.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"Connect\"));\n}\n\nexport default withRouter(Rooms);","map":{"version":3,"sources":["/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js"],"names":["React","useEffect","useRef","useState","createRef","io","withRouter","socket","mediaConstraints","audio","video","myPeerConnection","userStream","Rooms","props","userVideo","otherStreams","allVideos","setAllVideos","listOfStreams","partnerVideo","curState","setCurState","navigator","mediaDevices","getUserMedia","then","streamz","console","log","current","srcObject","on","joinroom","getTracks","forEach","track","addTrack","candidate","newCandidate","RTCIceCandidate","addIceCandidate","createdAnswer","desc","RTCSessionDescription","setRemoteDescription","createdOffer","createPeerConnection","stream","createAnswer","answer","setLocalDescription","emit","roomNum","match","params","id","sdp","localDescription","handleTrackEvent","event","streams","newRef","oldArray","length","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","offer","map","cur"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, createRef } from 'react'\nimport io from 'socket.io-client'\nimport { withRouter } from 'react-router'\n\nconst socket = io('http://localhost:8000')\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\n\nlet myPeerConnection\nlet userStream\n\nfunction Rooms(props) {\n  const userVideo = useRef()\n  const otherStreams = useRef([])\n  const [allVideos, setAllVideos] = useState({\n    listOfStreams: [React.createRef()]\n  })\n  const partnerVideo = useRef()\n\n  const [curState, setCurState] = useState('add video')\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      console.log('captured screen')\n      userVideo.current.srcObject = streamz\n      userStream = streamz\n    })\n\n    socket.on('connectToRoom', () => {\n      joinroom()\n    })\n\n    socket.on('makeConnection', () => {\n      userStream\n        .getTracks()\n        .forEach(track => myPeerConnection.addTrack(track, userStream))\n      console.log(userStream.getTracks(), 'this is userstream tracks')\n    })\n\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        console.log('handle-new-ice-candidate')\n        const newCandidate = new RTCIceCandidate(candidate)\n        myPeerConnection.addIceCandidate(newCandidate)\n      }\n    })\n\n    socket.on('handle-answer-to-room', createdAnswer => {\n      console.log('handle answer')\n      const desc = new RTCSessionDescription(createdAnswer)\n      myPeerConnection.setRemoteDescription(desc)\n    })\n\n    socket.on('handle-offer-to-room', createdOffer => {\n      createPeerConnection()\n      console.log('handle-offer-room is hit')\n      // var localStream\n      var desc = new RTCSessionDescription(createdOffer)\n\n      myPeerConnection\n        .setRemoteDescription(desc)\n        .then(stream => {\n          userStream.getTracks().forEach(track => {\n            myPeerConnection.addTrack(track, userStream)\n            return 'return'\n          })\n          console.log(userStream.getTracks(), 'this is userstream tracks')\n        })\n        .then(() => {\n          console.log('this skipped user stream')\n          return myPeerConnection.createAnswer()\n        })\n        .then(function(answer) {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer-to-room', {\n            roomNum: props.match.params.id,\n            sdp: myPeerConnection.localDescription\n          })\n        })\n    })\n  })\n\n  function handleTrackEvent(event) {\n    console.log('added events', event.streams)\n    partnerVideo.current.srcObject = event.streams[0]\n    // console.log(partnerVideo.current)\n    if (curState === 'add video') {\n      let newRef = React.createRef()\n      // setAllVideos(oldArray => [...oldArray, newRef])\n      setAllVideos(oldArray => {\n        oldArray.listOfStreams[\n          oldArray.listOfStreams.length - 1\n        ].current.srcObject = event.streams[0]\n        return [...oldArray, newRef]\n      })\n      setCurState(' add audio')\n    }\n\n    // console.log(allVideos, 'this is all videos current')\n  }\n\n  function createPeerConnection() {\n    console.log('created peer')\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun3.l.google.com:19302' },\n        {\n          urls: 'turn:numb.viagenie.ca',\n          credential: 'muazkh',\n          username: 'webrtc@live.com'\n        }\n      ]\n    })\n    myPeerConnection.onicecandidate = handleICECandidateEvent\n    myPeerConnection.ontrack = handleTrackEvent\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent\n  }\n\n  function handleNegotiationNeededEvent() {\n    console.log('negotiationneeded ')\n    myPeerConnection\n      .createOffer()\n      .then(function(offer) {\n        return myPeerConnection.setLocalDescription(offer)\n      })\n      .then(() => {\n        socket.emit('video-offer-to-room', {\n          sdp: myPeerConnection.localDescription,\n          roomNum: props.match.params.id\n        })\n      })\n  }\n\n  function joinroom() {\n    console.log('reached join roon')\n    createPeerConnection()\n  }\n\n  function handleICECandidateEvent(event) {\n    console.log('new-ice-candidate-toroom')\n    if (event.candidate) {\n      socket.emit('new-ice-candidate-to-room', {\n        roomNum: props.match.params.id,\n        candidate: event.candidate\n      })\n    }\n  }\n  if (allVideos) {\n    console.log(allVideos, 'this is allVideos array')\n  }\n  return (\n    <div>\n      <video autoPlay ref={userVideo}></video>\n      <video autoPlay ref={partnerVideo}></video>\n      {allVideos.listOfStreams.length >= 1\n        ? allVideos.listOfStreams.map(cur => {\n            console.log(cur, 'this is cur')\n            return <video autoPlay ref={cur}></video>\n          })\n        : null}\n      {/* <div>\n        {allVideos.map(() => {\n          return 'lol'\n        })}\n      </div> */}\n      <button\n        onClick={() => {\n          socket.emit('connectToRooms', props.match.params.id)\n        }}\n      >\n        Connect\n      </button>\n    </div>\n  )\n}\n\nexport default withRouter(Rooms)\n"]},"metadata":{},"sourceType":"module"}