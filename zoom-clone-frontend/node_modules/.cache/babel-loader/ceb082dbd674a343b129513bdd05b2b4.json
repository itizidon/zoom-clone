{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/src/components/Room.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nconst socket = io('http://localhost:8000');\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints);\n};\n\nlet otherUsers = {};\nlet sdp;\nlet myPeerConnection;\n\nfunction Room() {\n  const userVideo = useRef();\n  useEffect(() => {\n    async function getRoom() {\n      await socket.emit('roomlist');\n    }\n\n    getRoom();\n    socket.on('gotroomlist', room => {\n      otherUsers = room;\n    });\n\n    if (otherUsers.empty) {\n      console.log('get rooms');\n      createPeerConnection();\n      navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n        userVideo.current.srcObject = streamz;\n        streamz.getTracks().forEach(track => myPeerConnection.addTrack(track, streamz));\n      });\n    } else {\n      socket.emit('latejoin');\n    }\n\n    socket.on('sentVideo', negotiation => {\n      var localStream = null;\n      createPeerConnection();\n      var desc = new RTCSessionDescription(negotiation);\n      myPeerConnection.setRemoteDescription(desc).then(() => {\n        return navigator.mediaDevices.getUserMedia(mediaConstraints);\n      }).then(streamz => {\n        localStream = streamz;\n        userVideo.current.srcObject = localStream;\n        localStream.getTracks().forEach(track => myPeerConnection.addTrack(track, localStream));\n      }).then(() => {\n        return myPeerConnection.createAnswer();\n      }).then(answer => {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer', myPeerConnection.localDescription);\n      });\n    });\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [{\n          url: 'stun:stun1.l.google.com:19302'\n        }]\n      });\n\n      myPeerConnection.onicecandidate = function handleICECandidateEvent(event) {\n        if (event.candidate) {\n          socket.emit('new-ice-candidate', event.candidate);\n        }\n      }; // myPeerConnection.ontrack = function handleTrackEvent(event) {\n      //   document.getElementById('received_video').srcObject = event.streams[0]\n      //   document.getElementById('hangup-button').disabled = false\n      // }\n\n\n      myPeerConnection.onnegotiationneeded = function handleNegotiationNeededEvent() {\n        myPeerConnection.createOffer().then(function (offer) {\n          return myPeerConnection.setLocalDescription(offer);\n        }).then(() => {\n          socket.emit('video-offer', myPeerConnection.localDescription);\n        }); //socketio stuff\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Room;","map":{"version":3,"sources":["/home/don/projects/zoom-clone/src/components/Room.js"],"names":["React","useEffect","useRef","useState","io","mediaConstraints","audio","video","socket","openMediaDevices","constraints","navigator","mediaDevices","getUserMedia","otherUsers","sdp","myPeerConnection","Room","userVideo","getRoom","emit","on","room","empty","console","log","createPeerConnection","then","streamz","current","srcObject","getTracks","forEach","track","addTrack","negotiation","localStream","desc","RTCSessionDescription","setRemoteDescription","createAnswer","answer","setLocalDescription","localDescription","RTCPeerConnection","iceServers","url","onicecandidate","handleICECandidateEvent","event","candidate","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","offer"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport io from 'socket.io-client'\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\nconst socket = io('http://localhost:8000')\n\nconst openMediaDevices = async constraints => {\n  return await navigator.mediaDevices.getUserMedia(constraints)\n}\n\nlet otherUsers = {}\n\nlet sdp\n\nlet myPeerConnection\n\nfunction Room() {\n  const userVideo = useRef()\n\n  useEffect(() => {\n    async function getRoom() {\n      await socket.emit('roomlist')\n    }\n\n    getRoom()\n    socket.on('gotroomlist', room => {\n      otherUsers = room\n    })\n\n    if (otherUsers.empty) {\n      console.log('get rooms')\n      createPeerConnection()\n      navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n        userVideo.current.srcObject = streamz\n        streamz\n          .getTracks()\n          .forEach(track => myPeerConnection.addTrack(track, streamz))\n      })\n    } else {\n      socket.emit('latejoin')\n    }\n    socket.on('sentVideo', negotiation => {\n      var localStream = null\n      createPeerConnection()\n      var desc = new RTCSessionDescription(negotiation)\n\n      myPeerConnection\n        .setRemoteDescription(desc)\n        .then(() => {\n          return navigator.mediaDevices.getUserMedia(mediaConstraints)\n        })\n        .then(streamz => {\n          localStream = streamz\n          userVideo.current.srcObject = localStream\n\n          localStream\n            .getTracks()\n            .forEach(track => myPeerConnection.addTrack(track, localStream))\n        })\n        .then(() => {\n          return myPeerConnection.createAnswer()\n        })\n        .then(answer => {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer', myPeerConnection.localDescription)\n        })\n    })\n\n    function createPeerConnection() {\n      myPeerConnection = new RTCPeerConnection({\n        iceServers: [{ url: 'stun:stun1.l.google.com:19302' }]\n      })\n      myPeerConnection.onicecandidate = function handleICECandidateEvent(\n        event\n      ) {\n        if (event.candidate) {\n          socket.emit('new-ice-candidate', event.candidate)\n        }\n      }\n      // myPeerConnection.ontrack = function handleTrackEvent(event) {\n      //   document.getElementById('received_video').srcObject = event.streams[0]\n      //   document.getElementById('hangup-button').disabled = false\n      // }\n      myPeerConnection.onnegotiationneeded = function handleNegotiationNeededEvent() {\n        myPeerConnection\n          .createOffer()\n          .then(function(offer) {\n            return myPeerConnection.setLocalDescription(offer)\n          })\n          .then(() => {\n            socket.emit('video-offer', myPeerConnection.localDescription)\n          })\n        //socketio stuff\n      }\n    }\n  })\n\n  return (\n    <div>\n      <video autoPlay ref={userVideo}></video>\n    </div>\n  )\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}