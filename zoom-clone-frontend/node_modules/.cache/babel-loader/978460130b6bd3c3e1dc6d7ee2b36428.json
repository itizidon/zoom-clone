{"ast":null,"code":"var _jsxFileName = \"/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { withRouter } from 'react-router';\nconst socket = io('http://localhost:8000');\nlet counter = 0;\nlet mediaConstraints = {\n  audio: true,\n  // We want an audio track\n  video: true // ...and we want a video track\n\n};\nlet myPeerConnection;\nlet userStream;\n\nfunction Rooms(props) {\n  const userVideo = useRef();\n  const otherStreams = useRef([]);\n  const allVideos = useRef([]);\n  const partnerVideo = useRef();\n  useEffect(() => {\n    socket.on('connectToRoom', () => {\n      joinroom();\n    });\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        const newCandidate = new RTCIceCandidate(candidate);\n        myPeerConnection.addIceCandidate(newCandidate);\n      }\n    });\n    socket.on('handle-answer-to-room', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer);\n      myPeerConnection.setRemoteDescription(desc);\n    });\n    socket.on('handle-offer-to-room', createdOffer => {\n      console.log('handle-offer-room is hit');\n      createPeerConnection(); // var localStream\n\n      var desc = new RTCSessionDescription(createdOffer);\n      myPeerConnection.setRemoteDescription(desc).then(() => {\n        return myPeerConnection.createAnswer();\n      }).then(function (answer) {\n        return myPeerConnection.setLocalDescription(answer);\n      }).then(() => {\n        socket.emit('video-answer-to-room', {\n          roomNum: props.match.params.id,\n          sdp: myPeerConnection.localDescription\n        });\n      });\n    });\n  });\n\n  function handleTrackEvent(event) {\n    partnerVideo.current.srcObject = event.streams[0];\n    console.log(event.streams); // console.log(partnerVideo.current)\n\n    allVideos.current.push(React.createRef()); // console.log(allVideos.current.length, 'this is all videos current')\n    // allVideos.current[allVideos.current.length - 1].current = {\n    //   srcObject: event.streams[event.streams.length -1]\n    // }\n    // console.log('added track hit')\n\n    console.log(allVideos);\n  }\n\n  function createPeerConnection() {\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun3.l.google.com:19302'\n      }, {\n        urls: 'turn:numb.viagenie.ca',\n        credential: 'muazkh',\n        username: 'webrtc@live.com'\n      }]\n    });\n    myPeerConnection.onicecandidate = handleICECandidateEvent;\n    myPeerConnection.ontrack = handleTrackEvent;\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent;\n  }\n\n  function handleNegotiationNeededEvent() {\n    myPeerConnection.createOffer().then(function (offer) {\n      return myPeerConnection.setLocalDescription(offer);\n    }).then(() => {\n      socket.emit('video-offer-to-room', {\n        sdp: myPeerConnection.localDescription,\n        roomNum: props.match.params.id\n      });\n    });\n  }\n\n  function joinroom() {\n    console.log('reached join roon');\n    createPeerConnection();\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz;\n      userStream = streamz;\n      streamz.getTracks().forEach(track => myPeerConnection.addTrack(track, streamz));\n    });\n  }\n\n  function handleICECandidateEvent(event) {\n    socket.emit('new-ice-candidate-to-room', {\n      roomNum: props.match.params.id,\n      candidate: event.candidate\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      socket.emit('connectToRooms', props.match.params.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"Connect\"));\n}\n\nexport default withRouter(Rooms);","map":{"version":3,"sources":["/home/don/projects/zoom-clone/zoom-clone-frontend/src/components/Rooms.js"],"names":["React","useEffect","useRef","useState","io","withRouter","socket","counter","mediaConstraints","audio","video","myPeerConnection","userStream","Rooms","props","userVideo","otherStreams","allVideos","partnerVideo","on","joinroom","candidate","newCandidate","RTCIceCandidate","addIceCandidate","createdAnswer","desc","RTCSessionDescription","setRemoteDescription","createdOffer","console","log","createPeerConnection","then","createAnswer","answer","setLocalDescription","emit","roomNum","match","params","id","sdp","localDescription","handleTrackEvent","event","current","srcObject","streams","push","createRef","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","offer","navigator","mediaDevices","getUserMedia","streamz","getTracks","forEach","track","addTrack"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport io from 'socket.io-client'\nimport { withRouter } from 'react-router'\n\nconst socket = io('http://localhost:8000')\nlet counter = 0\n\nlet mediaConstraints = {\n  audio: true, // We want an audio track\n  video: true // ...and we want a video track\n}\n\nlet myPeerConnection\nlet userStream\n\nfunction Rooms(props) {\n  const userVideo = useRef()\n  const otherStreams = useRef([])\n  const allVideos = useRef([])\n\n  const partnerVideo = useRef()\n  useEffect(() => {\n    socket.on('connectToRoom', () => {\n      joinroom()\n    })\n\n    socket.on('handle-new-ice-candidate', candidate => {\n      if (candidate) {\n        const newCandidate = new RTCIceCandidate(candidate)\n        myPeerConnection.addIceCandidate(newCandidate)\n      }\n    })\n\n    socket.on('handle-answer-to-room', createdAnswer => {\n      const desc = new RTCSessionDescription(createdAnswer)\n      myPeerConnection.setRemoteDescription(desc)\n    })\n\n    socket.on('handle-offer-to-room', createdOffer => {\n      console.log('handle-offer-room is hit')\n      createPeerConnection()\n      // var localStream\n      var desc = new RTCSessionDescription(createdOffer)\n\n      myPeerConnection\n        .setRemoteDescription(desc)\n        .then(() => {\n          return myPeerConnection.createAnswer()\n        })\n        .then(function(answer) {\n          return myPeerConnection.setLocalDescription(answer)\n        })\n        .then(() => {\n          socket.emit('video-answer-to-room', {\n            roomNum: props.match.params.id,\n            sdp: myPeerConnection.localDescription\n          })\n        })\n    })\n  })\n\n  function handleTrackEvent(event) {\n    partnerVideo.current.srcObject = event.streams[0]\n    console.log(event.streams)\n    // console.log(partnerVideo.current)\n\n    allVideos.current.push(React.createRef())\n    // console.log(allVideos.current.length, 'this is all videos current')\n    // allVideos.current[allVideos.current.length - 1].current = {\n    //   srcObject: event.streams[event.streams.length -1]\n    // }\n    // console.log('added track hit')\n    console.log(allVideos)\n  }\n\n  function createPeerConnection() {\n    myPeerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun3.l.google.com:19302' },\n        {\n          urls: 'turn:numb.viagenie.ca',\n          credential: 'muazkh',\n          username: 'webrtc@live.com'\n        }\n      ]\n    })\n    myPeerConnection.onicecandidate = handleICECandidateEvent\n    myPeerConnection.ontrack = handleTrackEvent\n    myPeerConnection.onnegotiationneeded = handleNegotiationNeededEvent\n  }\n\n  function handleNegotiationNeededEvent() {\n    myPeerConnection\n      .createOffer()\n      .then(function(offer) {\n        return myPeerConnection.setLocalDescription(offer)\n      })\n      .then(() => {\n        socket.emit('video-offer-to-room', {\n          sdp: myPeerConnection.localDescription,\n          roomNum: props.match.params.id\n        })\n      })\n  }\n\n  function joinroom() {\n    console.log('reached join roon')\n    createPeerConnection()\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(streamz => {\n      userVideo.current.srcObject = streamz\n      userStream = streamz\n      streamz\n        .getTracks()\n        .forEach(track => myPeerConnection.addTrack(track, streamz))\n    })\n  }\n\n  function handleICECandidateEvent(event) {\n    socket.emit('new-ice-candidate-to-room', {\n      roomNum: props.match.params.id,\n      candidate: event.candidate\n    })\n  }\n\n  return (\n    <div>\n      <video autoPlay ref={userVideo}></video>\n      <video autoPlay ref={partnerVideo}></video>\n      {/* {allVideos.current.map((cur,ind)=>{\n        return <video autoPlay ref={cur.current}></video>\n      })} */}\n      <button\n        onClick={() => {\n          socket.emit('connectToRooms', props.match.params.id)\n        }}\n      >\n        Connect\n      </button>\n    </div>\n  )\n}\n\nexport default withRouter(Rooms)\n"]},"metadata":{},"sourceType":"module"}